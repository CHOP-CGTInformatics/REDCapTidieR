[{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 REDCapTidieR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"case-study-the-superhero-database","dir":"Articles","previous_headings":"","what":"Case Study: The Superhero Database","title":"Getting Started with REDCapTidieR","text":"Let’s look REDCap project information 734 superheroes, derived Superhero Database. screenshot REDCap Record Status Dashboard database. two instruments, Heroes Information captures “demographic” data individual superhero name, gender, alignment (good evil), Super Hero Powers captures one superpowers specific superhero possesses.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"importing-data-from-redcap","dir":"Articles","previous_headings":"","what":"Importing data from REDCap","title":"Getting Started with REDCapTidieR","text":"import data REDCap, use read_redcap() function. read_redcap() requires REDCap database URI REDCap API token. need API access REDCap database use REDCapTidieR. REDCapTidieR work files exported REDCap. use import data Superheroes database. can see returns tibble named superheroes. use rmarkdown::paged_table() can explore tibble. can see tibble read_redcap() returned two rows. may surprising might expect rows database 734 superheroes. read_redcap() returns data special object call supertibble. supertibble contains, among things, tibbles data metadata derived instrument. call data tibbles metadata tibbles. row supertibble corresponds one REDCap instrument. redcap_form_name redcap_form_label columns identify instrument row relates . redcap_data column contains data tibbles. redcap_metadata column contains metadata tibbles. Additional columns contain useful information data tibble, row column counts, size memory, percentage missing values data.","code":"library(REDCapTidieR) superheroes <- read_redcap(redcap_uri, token)  superheroes |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"exploring-the-contents-of-the-supertibble","dir":"Articles","previous_headings":"","what":"Exploring the contents of the supertibble","title":"Getting Started with REDCapTidieR","text":"designed supertibble can explore RStudio Data Viewer. can click table icon Environment tab view supertibble data viewer. glance see overview instruments REDCap project. can drill individual tables redcap_data redcap_metadata columns. Note heroes_information data tibble, row represents superhero, identified record_id. super_hero_powers data tibble, row represents superpower specific hero. row identified combination record_id redcap_form_instance. difference granularity super_hero_powers repeating instrument whereas heroes_information nonrepeating instrument. can also explore metadata tibbles redcap_metadata column find field labels, field types, field attributes.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"extracting-data-tibbles-from-the-supertibble","dir":"Articles","previous_headings":"","what":"Extracting data tibbles from the supertibble","title":"Getting Started with REDCapTidieR","text":"REDCapTidieR provides three different functions extract data tibbles supertibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"binding-data-tibbles-into-the-environment","dir":"Articles","previous_headings":"Extracting data tibbles from the supertibble","what":"Binding data tibbles into the environment","title":"Getting Started with REDCapTidieR","text":"bind_tibbles() function takes supertibble binds data tibbles directly global environment. use bind_tibbles() working interactively RStudio IDE, see data tibbles appear Environment pane. default, bind_tibbles() extracts data tibbles supertibble. tbls argument can specify subset data tibbles extracted. environment argument can supply environment object tibbles bound.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"extracting-a-list-of-data-tibbles","dir":"Articles","previous_headings":"Extracting data tibbles from the supertibble","what":"Extracting a list of data tibbles","title":"Getting Started with REDCapTidieR","text":"extract_tibbles() function takes supertibble returns named list data tibbles. default extract data tibbles. use str show structure list returned extract_tibbles(). can use tidyselect selectors select specific data tibbles.","code":"superheroes_list <- superheroes |>   extract_tibbles()  superheroes_list |>   str(max.level = 1) #> List of 2 #>  $ heroes_information: tibble [734 × 12] (S3: tbl_df/tbl/data.frame) #>  $ super_hero_powers : tibble [5,966 × 4] (S3: tbl_df/tbl/data.frame) superheroes |>   extract_tibbles(ends_with(\"powers\")) |>   str(max.level = 1) #> List of 1 #>  $ super_hero_powers: tibble [5,966 × 4] (S3: tbl_df/tbl/data.frame)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"extracting-a-single-data-tibble","dir":"Articles","previous_headings":"Extracting data tibbles from the supertibble","what":"Extracting a single data tibble","title":"Getting Started with REDCapTidieR","text":"extract_tibble() takes supertibble returns single data tibble.","code":"superheroes |>   extract_tibble(\"heroes_information\") |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"memory-considerations","dir":"Articles","previous_headings":"Extracting data tibbles from the supertibble","what":"Memory considerations","title":"Getting Started with REDCapTidieR","text":"might wonder ’s memory efficient supertibble extracted tibbles environment. R’s copy--modify behavior, extracted data tibbles actually use little additional memory. demonstrate , check size superheroes supertibble: bind data tibbles environment check combined size supertibble two data tibbles get following: true use extract_tibble() extract_tibbles() functions:","code":"lobstr::obj_size(superheroes) #> 314.63 kB superheroes |>   bind_tibbles()  lobstr::obj_size(superheroes, heroes_information, super_hero_powers) #> 314.63 kB a <- superheroes |> extract_tibble(\"heroes_information\") b <- superheroes |> extract_tibbles()  lobstr::obj_size(superheroes, a, b) #> 314.82 kB"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"adding-variable-labels-with-the-labelled-package","dir":"Articles","previous_headings":"","what":"Adding variable labels with the labelled package","title":"Getting Started with REDCapTidieR","text":"REDCapTidieR integrates labelled package allow attach labels variables supertibble. Variable labels can make data exploration easier. increasing number R packages support labelled data, including ggplot2 (via ggeasy) gtsummary. RStudio Data Viewer shows variable labels variable names. make_labelled() function takes supertibble returns supertibble variable labels applied variables supertibble well variables data metadata tibbles redcap_data redcap_metadata columns supertibble. can use labelled::look_for() function explore variable labels tibble. labels come ? labels actually REDCap field labels prompt data entry REDCap instrument! REDCapTidieR places field_label variable instrument’s metadata tibble. can see field labels REDCap instrument heroes_information labels . Note label name trailing colon :. won’t look good variable label let’s remove . make_labelled() function format_labels argument can use preprocess labels applying variables. Removing trailing : characters field label fairly common operation, REDCapTidieR provides format helper function can pass format_labels argument: find helpers included REDCapTidieR, see ?`format-helpers`. format_labels argument also accept multiple functions vector list. can pass function takes character vector returns modified character vector format_labels. make_labelled() process variable labels order functions supplied. following example, remove trailing colon fmt_strip_trailing_colon() make labels lower case base::tolower().","code":"superheroes |>   make_labelled() |>   bind_tibbles()  labelled::look_for(heroes_information) #>  pos variable             label                    col_type missing values     #>  1   record_id            Record ID                dbl      0                  #>  2   name                 Hero name:               chr      0                  #>  3   gender               Gender                   chr      0                  #>  4   eye_color            Eye color                chr      0                  #>  5   race                 Race                     chr      0                  #>  6   hair_color           Hair color               chr      0                  #>  7   height               Height                   dbl      0                  #>  8   weight               Weight                   dbl      2                  #>  9   publisher            Publisher                chr      15                 #>  10  skin_color           Skin Color               chr      0                  #>  11  alignment            Alignment                chr      0                  #>  12  form_status_complete REDCap Instrument Compl~ fct      0       Incomplete #>                                                                     Unverified #>                                                                     Complete superheroes |>   make_labelled(format_labels = ~ gsub(\":\", \"\", .)) |>   bind_tibbles()  labelled::look_for(heroes_information, \"hero\") #>  pos variable label     col_type missing values #>  2   name     Hero name chr      0 fmt_strip_trailing_colon(\"Hero name:\") #> [1] \"Hero name\" superheroes |>   make_labelled(     format_labels = c(       fmt_strip_trailing_colon,       base::tolower     )   ) |>   bind_tibbles()  labelled::look_for(heroes_information) #>  pos variable             label                    col_type missing values     #>  1   record_id            record id                dbl      0                  #>  2   name                 hero name                chr      0                  #>  3   gender               gender                   chr      0                  #>  4   eye_color            eye color                chr      0                  #>  5   race                 race                     chr      0                  #>  6   hair_color           hair color               chr      0                  #>  7   height               height                   dbl      0                  #>  8   weight               weight                   dbl      2                  #>  9   publisher            publisher                chr      15                 #>  10  skin_color           skin color               chr      0                  #>  11  alignment            alignment                chr      0                  #>  12  form_status_complete redcap instrument compl~ fct      0       Incomplete #>                                                                     Unverified #>                                                                     Complete"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"adding-summary-statistics-to-the-metadata-with-the-skimr-package","dir":"Articles","previous_headings":"","what":"Adding summary statistics to the metadata with the skimr package","title":"Getting Started with REDCapTidieR","text":"REDCapTidieR provides add_skimr_metadata() function make easy compute summary statistics fields project using skimr package. summary statistics added metadata tibbles. simple example showing summaries including count missing values (n_missing), proportion non-missing values (complete_rate), various numeric statistics: enables quick insights data content supports exploratory data analytics. columns added add_skimr_metadata() can also labelled.","code":"# Extract the heroes_information metadata tibble and add metadata heroes_information_metadata <-   superheroes |>   add_skimr_metadata() |>   dplyr::select(redcap_metadata) |>   purrr::pluck(1, 1)  # Highlight the numeric summaries created by add_skimr_metadata() heroes_information_metadata |>   dplyr::select(field_name, skim_type:complete_rate, starts_with(\"numeric\")) |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/REDCapTidieR.html","id":"package-options","dir":"Articles","previous_headings":"","what":"Package Options","title":"Getting Started with REDCapTidieR","text":"REDCapTidieR allows set couple options globally avoid passing extra arguments read_redcap. Globally allow mixed structure instruments: Globally silence warnings related Missing Data Codes (MDCs): v1.1.0, REDCapTidieR partial support MDCs. MDCs logical categorical fields converted NA warning. MDCs field types remain output. need greater support MDCs, consider opening issue!","code":"options(redcaptidier.allow.mixed.structure = TRUE) options(redcaptidier.allow.mdc = TRUE)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"the-block-matrix","dir":"Articles","previous_headings":"","what":"The Block Matrix","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"Getting Started vignette, stated importing records complex REDCap projects via REDCap API can ugly. section describe mean precise language. REDCapR::redcap_read_oneshot() function pulls data REDCap project via REDCap API provides R environment without performing much processing. returns list element named data contains data project single data frame. , use function import data Superhero REDCap database, contains nonrepeating instrument heroes_information repeating instrument super_hero_powers. use rmarkdown::paged_table() allow explore large data frame browser. data structure called block matrix. ’s happens REDCap mashes contents project repeating nonrepeating instruments single table. may seem good idea everything one data frame, significant downsides, including: ’s unwieldy! Although 734 superheroes data set, 6,700 rows. Every transformation first requires whittling huge data set. lot NA values. Many NA values don’t represent fields left blank data entry instead artifact table generated. Metadata helpful missing. example, ’s possible determine columns associated specific instrument nonrepeating instruments. meaning row data set inconsistent. rows represent observations per-record level (.e. derived nonrepeating instruments) others represent observations per-repeat-instance level (.e. derived repeating instruments). technically violates definition Tidy Data multiple types observational units stored table.","code":"superheroes_token <- \"123456789ABCDEF123456789ABCDEF04\" redcap_uri <- \"https://my.institution.edu/redcap/api/\" superheroes_ugly <- REDCapR::redcap_read_oneshot(redcap_uri, superheroes_token)$data  superheroes_ugly |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"structure-of-redcaptidier-data-tibbles","dir":"Articles","previous_headings":"","what":"Structure of REDCapTidieR Data Tibbles","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"REDCapTidieR breaks block matrix data tibbles, one instrument. REDCapTidieR collects data tibbles list column special object call supertibble. data tibbles tidier block matrix one instrument can repeating nonrepeating, therefore data tibble can one type observational unit stored inside . data tibble consistent granularity. Let’s take look data tibbles derived Superhero database contrast block matrix. Consider heroes_information, contains data nonrepeating instrument. tibble much smaller block matrix 734 rows 12 columns, NAs. data tibble’s name heroes_information descriptive. REDCapTidieR knows names instruments addition querying project’s data also queries project’s metadata describes, among things, names REDCap instruments. entry granularity, one superhero, identified record_id. number data columns follow, starting name, gender, eye_color, race, etc. columns order REDCap instrument. last column REDCapTidieR data tibble always form_status_complete indicates whether instrument marked completed. Now consider super_hero_powers table, contains data repeating instrument. addition record_id redcap_form_instance column. granularity row one superpower per superhero, identified record_id redcap_form_instance. two columns uniquely identify row data tibble, call identifier columns. REDCapTidieR supertibble, identifier columns always come first, followed [data columns] finally form_status_complete column.","code":"library(REDCapTidieR)  read_redcap(redcap_uri, superheroes_token) |>   bind_tibbles()  heroes_information |>   rmarkdown::paged_table() super_hero_powers |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"longitudinal-redcap-projects","dir":"Articles","previous_headings":"","what":"Longitudinal REDCap Projects","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"REDCap supports two main mechanisms allow collecting data multiple times: repeating instruments longitudinal projects. addition, longitudinal project may arms /repeating events. granularity table (.e. observational unit single row represents) depends structure project (classic, longitudinal, longitudinal multiple arms), structure instrument (repeating nonrepeating), , longitudinal projects, structure event (repeating nonrepeating). Note REDCap support repeating instruments inside repeating event. REDCapTidieR generates identifier columns according following table:  Note: Taken combination, identifier columns REDCapTidieR tibble guaranteed unique can therefore used composite primary key. makes easy join REDCapTidieR tibbles one another! default, REDCap names record ID field record_id, can changed inside REDCap project, REDCapTidieR smart enough handle . example, record ID field renamed subject_id record ID column data tibble subject_id. Whatever name, record ID column always first identifier column always first column REDCapTidieR data tibble. Additional columns generated order shown table . Let’s look REDCap database might use capture data clinical trial. longitudinal database assesses data (e.g. demographics) just enrollment, data (e.g. physical exam labs) multiple times pre-defined study visits. use dplyr::select() highlight instrument names whether instrument repeating. database six nonrepeating three repeating instruments. demographics instrument nonrepeating. granularity one row per study subject per event, since designated single event, really one row per study subject. redcap_event column identifies name event instrument associated: screening__enrollm (Screening Enrollment). chemistry instrument nonrepeating well. However, designated multiple events chemistry labs drawn multiple study visits. redcap_event column shows chemistry data four different events. granularity one row per study subject per event. three subjects multiple rows. row identified combination subject_id redcap_event. adverse_events instrument repeating. Since adverse events aren’t tied specific study visits, patient can number different adverse events time, makes sense designate instrument single special event adverse_event, ’ve done . granularity table one row per study subject per repeat instance per event. However since designated single event, really one row per study subject per repeat instance. first subject three adverse events listed, second subject two. possible repeating instrument designated multiple events, however uncommon pattern. REDCapTidieR supports scenario well. unscheduled event repeating event. Like adverse events, unscheduled visits aren’t tied pre-determined study visit, patient zero, one, multiple unscheduled visits. hand, might want record kinds data unscheduled visit pre-determined regular visit collect data instruments, example physical_exam hematology. granularity tables one row per study subject per event per event instance. subject two unscheduled visits. redcap_event_instance allows us match physical_exam hematology responses occurred unscheduled visit. Note REDCapTidieR allows instrument associated repeating nonrepeating events time. case, redcap_event_instance column NA rows correspond data captured part nonrepeating event. REDCapTidieR supports projects multiple arms. project multiple arms, additional column redcap_arm identify arm row associated .","code":"longitudinal_token <- \"123456789ABCDEF123456789ABCDEF06\" library(REDCapTidieR)  longitudinal <- read_redcap(redcap_uri, longitudinal_token)  longitudinal |>   dplyr::select(redcap_form_name, redcap_form_label, structure) |>   rmarkdown::paged_table() longitudinal |>   bind_tibbles()  demographics |>   rmarkdown::paged_table() chemistry |>   rmarkdown::paged_table() adverse_events |>   rmarkdown::paged_table() physical_exam |>   dplyr::filter(redcap_event == \"unscheduled\") |>   rmarkdown::paged_table()  hematology |>   dplyr::filter(redcap_event == \"unscheduled\") |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"mixed-structure-instruments","dir":"Articles","previous_headings":"Longitudinal REDCap Projects","what":"Mixed Structure Instruments","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"default, REDCapTidieR allow instrument designated repeating nonrepeating instrument different events (.e. “mixed structure instrument”), throw error detected: design inherently goes tidy data principles. However, REDCapTidieR v1.1.0 now possible override behavior setting allow_mixed_structure read_redcap() TRUE. enabled, nonrepeating variants mixed structure instruments treated repeating instruments single repeating instance. Users cautioned enabling feature, since changes definitions original data output. visually assist , see structure supertibble say “mixed”:","code":"Error in `clean_redcap_long()` at REDCapTidieR/R/read_redcap.R:272:5:                             ✖ Instruments detected that have both repeating and nonrepeating instances defined in the project: mixed_structure_1 and mixed_structure_form_complete ℹ Set `allow_mixed_structure` to `TRUE` to override. See Mixed Structure Instruments for more information. read_redcap(redcap_uri,   mixed_token,   allow_mixed_structure = TRUE ) |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"categorical-variables","dir":"Articles","previous_headings":"","what":"Categorical Variables","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"REDCapTidieR performs number opinionated transformations categorical fields streamline exploring working . Fields type yesno truefalse converted logical variables. Fields single-answer categorical type (dropdown, radio) converted factor variables default. REDCapTidieR constructs factor way possible choices defined REDCap represented factor levels, order factor levels order choices REDCap. Consider Field Editor adverse_event_grade variable single-answer radio field. five choices field. Choices raw values choice labels, separated comma. , raw values 1, 2, 3, 4, 5, associated choice labels Grade 1, Grade 2, Grade 3, Grade 4, Grade 5. REDCapTidieR preserves possible choices levels even represented data. makes possible discover different choices. example, even though Grade 1 2 adverse events data, can see 5 possible grades. Adverse event grades intrinsically ordered. multiple choice field intrinsically ordered choices, choices usually presented proper order. Since REDCapTidieR preserves order choices REDCap, can convert intrinsically ordered variables ordered factors. Fields multi-answer checkbox type treated special way. REDCapTidieR expands fields multiple columns. derived columns represents one choice coded logical variable. Consider adverse_event_relationship_other field. field eight choices, raw values (.e. part comma) apheresis, ld_chemo, soc_treatment, underlying_disease, other_research_proc, con_meds, . recommend multi-answer checkbox fields make raw value human readable word example. REDCapTidieR construct name variable name field, followed three underscores, followed raw value choice defined REDCap. variables REDCapTidieR generates adverse_event_relationship_other field:","code":"adverse_events$adverse_event_serious |>   dplyr::glimpse() #>  logi [1:5] FALSE FALSE FALSE FALSE FALSE adverse_events$adverse_event_grade #> [1] Grade 2 Grade 1 Grade 1 Grade 2 Grade 1 #> Levels: Grade 1 Grade 2 Grade 3 Grade 4 Grade 5 ae_grade <- adverse_events$adverse_event_grade  ae_grade |>   factor(ordered = TRUE, levels = levels(ae_grade)) #> [1] Grade 2 Grade 1 Grade 1 Grade 2 Grade 1 #> Levels: Grade 1 < Grade 2 < Grade 3 < Grade 4 < Grade 5 adverse_events |>   dplyr::select(dplyr::starts_with(\"adverse_event_relationship_other___\")) |>   dplyr::glimpse() #> Rows: 5 #> Columns: 8 #> $ adverse_event_relationship_other___apheresis           <lgl> FALSE, FALSE, F… #> $ adverse_event_relationship_other___ld_chemo            <lgl> FALSE, FALSE, F… #> $ adverse_event_relationship_other___soc_treatment       <lgl> FALSE, FALSE, F… #> $ adverse_event_relationship_other___underlying_disease  <lgl> TRUE, FALSE, FA… #> $ adverse_event_relationship_other___other_research_proc <lgl> FALSE, FALSE, F… #> $ adverse_event_relationship_other___con_meds            <lgl> TRUE, FALSE, TR… #> $ adverse_event_relationship_other___other               <lgl> FALSE, FALSE, F… #> $ adverse_event_relationship_other___none                <lgl> FALSE, TRUE, FA…"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"data-access-groups","dir":"Articles","previous_headings":"","what":"Data Access Groups","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"REDCap projects may use Data Access Groups (DAGs) assign specific user privileges record-level access entries within project. DAGs frequently used multi-center projects data individual centers needs isolated protected users belonging centers. project DAGs enabled, default column named redcap_data_access_group appear data tibble identifier columns.","code":"redcap_project_with_dags <- read_redcap(redcap_uri, dag_token)  redcap_project_with_dags |>   extract_tibble(\"non_repeat_form_1\") |>   rmarkdown::paged_table()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"surveys","dir":"Articles","previous_headings":"","what":"Surveys","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"Instruments used generate REDCap surveys generate additional data columns: redcap_survey_timestamp: time survey competed redcap_survey_identifier: participant identifier. NA Participant Identifier feature REDCap disabled. columns placed data columns prior form_status_complete column.","code":"survey <- read_redcap(redcap_uri, survey_token) |>   extract_tibble(\"survey\")  survey |>   dplyr::glimpse() #> Rows: 4 #> Columns: 9 #> $ record_id                <dbl> 1, 2, 3, 4 #> $ survey_yesno             <lgl> TRUE, FALSE, NA, NA #> $ survey_radio             <fct> Choice 1, Choice 2, NA, NA #> $ survey_checkbox___one    <lgl> FALSE, FALSE, FALSE, FALSE #> $ survey_checkbox___two    <lgl> TRUE, TRUE, FALSE, FALSE #> $ survey_checkbox___three  <lgl> TRUE, TRUE, FALSE, FALSE #> $ redcap_survey_identifier <lgl> NA, NA, NA, NA #> $ redcap_survey_timestamp  <dttm> 2022-11-09 10:33:35, NA, NA, NA #> $ form_status_complete     <fct> Complete, Incomplete, Incomplete, Incomplete"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/diving_deeper.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Diving Deeper: Understanding REDCapTidieR Data Tibbles","text":"summary, rules REDCapTidieR constructs data tibbles: One data tibble built instrument. first column always record ID column derived record ID field. Additional identifier columns may follow record ID column, depending structure instrument structure project (see table ). project data access groups enabled, column identifying data access column follow . Next, data columns appear order REDCap instrument. True/false type fields converted logical columns. Single-answer categorical fields converted factor columns. Multi-answer checkbox fields expanded set logical columns, one choice. instrument used survey, survey timestamp identifier columns appear next. final column always form_status_complete.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/export_to_xlsx.html","id":"transforming-a-redcap-project-into-an-xlsx-document","dir":"Articles","previous_headings":"","what":"Transforming a REDCap project into an XLSX document","title":"Exporting to Excel","text":"transformation REDCap project XLSX document can achieved three straightforward steps using write_redcap_xlsx() function: Specify REDCap URI API token. Invoke read_redcap(). Apply write_redcap_xlsx(). practical illustration: resulting file contain data corresponding REDCap instrument dedicated sheet. Additionally, “Table Contents” sheet beginning, “REDCap Metadata” sheet end.","code":"library(REDCapTidieR) redcap_uri <- \"https://my.institution.edu/redcap/api/\" token <- \"123456789ABCDEF123456789ABCDEF04\"  my_redcap_data <- read_redcap(redcap_uri, token) write_redcap_xlsx(my_redcap_data, file = \"my_redcap_data.xlsx\")"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/export_to_xlsx.html","id":"diving-deeper","dir":"Articles","previous_headings":"","what":"Diving Deeper","title":"Exporting to Excel","text":"revisit Superheroes dataset Getting Started vignette. First, ’ll use read_redcap() create superheroes supertibble: superheroes supertibble contains two rows, one instrument Superheroes REDCap project. write_redcap_xlsx() function, leveraging openxlsx2 package, understands supertibble’s structure creates collaborator-friendly XLSX file. Let’s try ! open Excel document, ’ll see multiple sheets. first one Table Contents sheet, followed individual sheets instrument’s data, concluded REDCap Metadata sheet. Table Contents sheet provides overview data present rest document. wish exclude sheet, set include_toc_sheet argument write_redcap_xlsx() FALSE. instrument’s data contained separate sheet. better understanding REDCapTidieR represents REDCap data, refer Diving Deeper vignette. column headers come pre-applied filters (notice arrow right side header cell), making data exploration straightforward. REDCap Metadata sheet offers metadata fields instruments one place. don’t want sheet, set include_metadata_sheet argument write_redcap_xlsx() FALSE.","code":"superheroes_token <- \"123456789ABCDEF123456789ABCDEF04\" redcap_uri <- \"https://my.institution.edu/redcap/api/\" superheroes <- read_redcap(redcap_uri, superheroes_token)  superheroes |>   rmarkdown::paged_table() superheroes |>   write_redcap_xlsx(file = \"superheroes.xlsx\")"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/export_to_xlsx.html","id":"applying-labels","dir":"Articles","previous_headings":"Diving Deeper","what":"Applying Labels","title":"Exporting to Excel","text":"Labels can offer valuable context collaborators, helping understand data specific column. make_labelled() function allows add variable labels REDCapTidieR supertibble, write_redcap_xlsx() can integrate labels Excel sheets. Let’s add variable labels superheroes export Excel: Observe first row now contains human-readable description column.","code":"superheroes |>   make_labelled() |>   write_redcap_xlsx(\"superheroes-labelled.xlsx\")"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/export_to_xlsx.html","id":"recoding-logical-columns","dir":"Articles","previous_headings":"Diving Deeper","what":"Recoding Logical Columns","title":"Exporting to Excel","text":"default, write_redcap_xlsx() recodes logical (TRUE/FALSE) columns human-friendly terms. can adjust behavior using recode_logical argument: write_redcap_xlsx() uses field label decide recode logical fields: Columns derived yesno fields recoded TRUE/FALSE yes/Columns derived checkbox fields recoded TRUE/FALSE Checked/Unchecked Columns derived truefalse fields left (TRUE/FALSE) Setting recode_logical FALSE preserve logical fields (TRUE/FALSE).","code":"supertbl |>   write_redcap_xlsx(recode_logical = TRUE)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"arm","dir":"Articles","previous_headings":"","what":"Arm","title":"Glossary of REDCap and REDCapTidieR Terms","text":"ordered group events. Arms provide mechanism allows one longitudinal project multiple different sequences events defined. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"block-matrix","dir":"Articles","previous_headings":"","what":"Block matrix","title":"Glossary of REDCap and REDCapTidieR Terms","text":"rectangular data structure (matrix) constructed multiple smaller rectangular data structures (blocks). context REDCap, block matrix rectangular data set contains data multiple instruments returned REDCap API. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"column","dir":"Articles","previous_headings":"","what":"Column","title":"Glossary of REDCap and REDCapTidieR Terms","text":"vertical series cells data frame tibble. Synonym: Variable. See also: Row. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"composite-primary-key","dir":"Articles","previous_headings":"","what":"Composite primary key","title":"Glossary of REDCap and REDCapTidieR Terms","text":"primary key column table distinct row serves identify row. composite primary key primary key consists multiple columns combination distinct row serve identify row. Taken together, identifier columns data tibble form composite primary key. makes easy join data tibbles together. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"choice","dir":"Articles","previous_headings":"","what":"Choice","title":"Glossary of REDCap and REDCapTidieR Terms","text":"option category defined context single-answer multi-answer categorical field type REDCap. can define choices using REDCap Field Editor. Choices raw value (unique identifier - usually serial number can changed) choice label (human readable description choice, displayed data entry). context REDCapTidieR, choices come play two scenarios construction data tibble. Choice labels single-answer type fields (dropdown radio) used define values data columns derived fields. Raw values multi-answer checkbox field used construct names data columns derived . ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"classic-project","dir":"Articles","previous_headings":"","what":"Classic project","title":"Glossary of REDCap and REDCapTidieR Terms","text":"Also known traditional project, simplest type REDCap project. can define one multiple instruments (also called forms) data entry. repeating nonrepeating instruments allowed. Nonrepeating instruments completed record. nonrepeating instruments, one row data data tibble represents one record. Repeating instruments can completed arbitrary number times record. repeating instruments, one row data data tibble represents one repeat instance one record. See also: Longitudinal project. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"data-access-group","dir":"Articles","previous_headings":"","what":"Data Access Group","title":"Glossary of REDCap and REDCapTidieR Terms","text":"Data Access Group (DAG) feature REDCap streamlines multi-group collaboration partitioning groups records single project. feature particularly useful want certain users groups users access specific subset data project. multi-site study, instance, might want site access data. setting DAG site, can ensure site users can view edit records belong DAG. Super users (.e., full privileges) can view edit records project, regardless DAG belong. project DAGs enabled, corresponding redcap_data_access_group column identifies DAG given record belongs .","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"database","dir":"Articles","previous_headings":"","what":"Database","title":"Glossary of REDCap and REDCapTidieR Terms","text":"context REDCap, project. prefer term “project” specific meaning. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"data-column","dir":"Articles","previous_headings":"","what":"Data column","title":"Glossary of REDCap and REDCapTidieR Terms","text":"column data tibble derived data entered fields REDCap instrument. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"data-tibble","dir":"Articles","previous_headings":"","what":"Data tibble","title":"Glossary of REDCap and REDCapTidieR Terms","text":"tibble contains data entered fields specific REDCap instrument. redcap_data column supertibble contains data tibbles project. columns data tibble include identifier columns jointly identify row data columns contain data entered REDCap. REDCapTidieR provides several functions extract data tibbles supertibble. See also: Metadata tibble. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"data-viewer","dir":"Articles","previous_headings":"","what":"Data viewer","title":"Glossary of REDCap and REDCapTidieR Terms","text":"part RStudio IDE functionality allows inspect data frames, tibbles, data structures. includes features perform basic exploratory data analysis sorting, filtering, searching. supertibble designed work well data viewer. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"environment","dir":"Articles","previous_headings":"","what":"Environment","title":"Glossary of REDCap and REDCapTidieR Terms","text":"fundamental data structure R allows binding set names set objects. global environment namespace bind objects values tibbles interactive work. bind_tibbles() function takes supertibble binds data tibbles global environment. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"event","dir":"Articles","previous_headings":"","what":"Event","title":"Glossary of REDCap and REDCapTidieR Terms","text":"part longitudinal project. event can associated one multiple instruments may either repeating nonrepeating. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"factor","dir":"Articles","previous_headings":"","what":"Factor variable","title":"Glossary of REDCap and REDCapTidieR Terms","text":"data type R categorical data. default, single-answer categorical REDCap field types (dropdown, radio) represented factor variables data tibble. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"field","dir":"Articles","previous_headings":"","what":"Field","title":"Glossary of REDCap and REDCapTidieR Terms","text":"attribute entity (e.g., age height) can captured REDCap. Instruments made fields. can configure fields instrument using REDCap Field Editor. Fields field type can descriptive field label. data tibble contains data entered fields REDCap project. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"field-label","dir":"Articles","previous_headings":"","what":"Field label","title":"Glossary of REDCap and REDCapTidieR Terms","text":"piece text acts prompt data entry REDCap. make_labelled() function creates variable labels based field label. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"field-type","dir":"Articles","previous_headings":"","what":"Field type","title":"Glossary of REDCap and REDCapTidieR Terms","text":"data type data can entered specific field. Important field types include: text, used free-text numeric data yesno truefalse, used logical data dropdown radio, used single-answer categorical data checkbox, used multi-answer categorical data ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"form","dir":"Articles","previous_headings":"","what":"Form","title":"Glossary of REDCap and REDCapTidieR Terms","text":"context REDCap, instrument. prefer term “instrument” specific meaning “form.” ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"format-helper","dir":"Articles","previous_headings":"","what":"Format helper","title":"Glossary of REDCap and REDCapTidieR Terms","text":"function provided REDCapTidieR designed help turning field labels data columns pretty variable labels. See format-helpers. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"granularity","dir":"Articles","previous_headings":"","what":"Granularity","title":"Glossary of REDCap and REDCapTidieR Terms","text":"level detail specific row data tibble represents. depends structure project (classic vs. longitudinal vs. longitudinal arms), structure instrument (repeating vs. nonrepeating), , longitudinal projects, structure event (repeating vs. nonrepeating). example, data tibble containing data nonrepeating instrument longitudinal project two arms granularity one row per record per event per arm. See also: section Longitudinal REDCap projects Diving Deeper vignette. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"identifier-column","dir":"Articles","previous_headings":"","what":"Identifier column","title":"Glossary of REDCap and REDCapTidieR Terms","text":"column data tibble serves partially identify entity described row. record ID column always present data tibble. Depending structure project (classic vs. longitudinal vs. longitudinal arms), structure instrument (nonrepeating vs repeating), structure event (repeating vs. nonrepeating) may additional identifier columns, including redcap_event, redcap_arm, redcap_form_instance, redcap_event_instance. Taken together, identifier columns form composite primary key. See also: section Longitudinal REDCap projects Diving Deeper vignette. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"import","dir":"Articles","previous_headings":"","what":"Import","title":"Glossary of REDCap and REDCapTidieR Terms","text":"context REDCapTidieR, process using REDCap API query data REDCap project make available inside R environment. use term “import” sense described R Data Science “take data stored file, database, web application programming interface (API), load data frame R.” note, term “import” ambiguous. perspective REDCap, “import” may mean writing external data database. clarify direction import, named main function REDCapTidieR read_redcap() analogous import functions tidyverse read_csv(). can use read_redcap() function import data REDCap project. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"instrument","dir":"Articles","previous_headings":"","what":"Instrument","title":"Glossary of REDCap and REDCapTidieR Terms","text":"Also called form. electronic data entry form REDCap. instrument contains fields data can entered. supertibble, row corresponds one instrument. instrument’s name human-readable label shown redcap_form_name redcap_form_label columns supertibble, respectively. data tibble contains data entered specific instrument. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"labelled","dir":"Articles","previous_headings":"","what":"labelled","title":"Glossary of REDCap and REDCapTidieR Terms","text":"labelled R package provides functions attach human-readable description (label) variable (variable label). Labelled data can streamline data exploration assist generation data dictionary. multiple packages support labelled data. make_labelled() function attaches variable labels variables supertibble variables data tibbles metadata tibbles contained supertibble. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"list-column","dir":"Articles","previous_headings":"","what":"List column","title":"Glossary of REDCap and REDCapTidieR Terms","text":"list fundamental data type R. tibble can contain columns lists, columns called list columns. REDCapTidieR leverages list columns store tibbles inside supertibble. example, redcap_data column supertibble list column contains data tibbles, redcap_metadata list column contains metadata tibbles. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"longitudinal-project","dir":"Articles","previous_headings":"","what":"Longitudinal project","title":"Glossary of REDCap and REDCapTidieR Terms","text":"type REDCap project contains events optionally arms. One instrument can associated multiple events. makes possible collect kind data record multiple times, useful longitudinal research studies multiple study visits. See also: Classic project. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"metadata-tibble","dir":"Articles","previous_headings":"","what":"Metadata tibble","title":"Glossary of REDCap and REDCapTidieR Terms","text":"tibble contains metadata specific REDCap instrument. redcap_metadata column supertibble contains metadata tibbles project. rows metadata tibble represent fields instrument. columns represent attributes fields. example, field_name, field_label, field_type columns show field’s name, human-readable description (field label), field type. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"nonrepeating-event","dir":"Articles","previous_headings":"","what":"Nonrepeating Event","title":"Glossary of REDCap and REDCapTidieR Terms","text":"event whose associated instruments can filled exactly per record per event (per arm, applicable). See also: Repeating Event. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"nonrepeating-instrument","dir":"Articles","previous_headings":"","what":"Nonrepeating Instrument","title":"Glossary of REDCap and REDCapTidieR Terms","text":"instrument can filled exactly per record classic project per record per event instance (per arm, applicable) longitudinal project. See also: Repeating Instrument. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"project","dir":"Articles","previous_headings":"","what":"Project","title":"Glossary of REDCap and REDCapTidieR Terms","text":"Also called database, REDCap project self-contained collection data metadata related data collection activity (example, specific research study). project may classic longitudinal. classic project consists instruments contain fields. longitudinal project may additionally include events arms. can use read_redcap() import data project. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"record","dir":"Articles","previous_headings":"","what":"Record","title":"Glossary of REDCap and REDCapTidieR Terms","text":"set information single entity (e.g., study participant) data captured specific REDCap project. record consists discrete data values organized fields can spread across multiple instruments, events, /arms. record unique record ID. data tibble, record ID always first column. record ID column one identifier columns. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"redcap-api","dir":"Articles","previous_headings":"","what":"REDCap API","title":"Glossary of REDCap and REDCapTidieR Terms","text":"application programming interface (API) REDCap instance allows external programs connect, upload, download data. access REDCap API, user must appropriate access privileges, API token, uniform resource identifier (URI) API endpoint (something like “.institution.edu/redcap/api”). REDCapTidieR package uses REDCapR query REDCap API. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"redcapr","dir":"Articles","previous_headings":"","what":"REDCapR","title":"Glossary of REDCap and REDCapTidieR Terms","text":"REDCapR R package provides functions interact REDCap API. REDCapTidieR builds REDCapR import data R. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"repeating-event","dir":"Articles","previous_headings":"","what":"Repeating Event","title":"Glossary of REDCap and REDCapTidieR Terms","text":"event whose associated instruments can filled zero, one, multiple times per record per event (per arm, applicable). Note: REDCap allow repeating instruments inside repeating events. See also: Nonrepeating Event. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"repeating-instrument","dir":"Articles","previous_headings":"","what":"Repeating Instrument","title":"Glossary of REDCap and REDCapTidieR Terms","text":"instrument can filled zero, one, multiple times per record classic project zero, one, multiple times per record per event (per arm, applicable) longitudinal project. Note: REDCap allow repeating instruments inside repeating events. See also: Nonrepeating Instrument. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"row","dir":"Articles","previous_headings":"","what":"Row","title":"Glossary of REDCap and REDCapTidieR Terms","text":"horizontal series cells data frame tibble. One row supertibble represents instrument. One row data tibble can represent different things, depending granularity data. See also: Column. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"skimr","dir":"Articles","previous_headings":"","what":"skimr","title":"Glossary of REDCap and REDCapTidieR Terms","text":"skimr R package provides summary statistics help users quickly skim understand data. REDCapTidieR’s add_skimr_metadata() function uses skimr add various summary statistics specific field metadata tibbles. See also: section Adding summary statistics metadata skimr package Getting Started vignette.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"structure","dir":"Articles","previous_headings":"","what":"Structure","title":"Glossary of REDCap and REDCapTidieR Terms","text":"structure instrument can repeating, nonrepeating, mixed. supertibble shows instrument’s structure structure column. structure project can classic, longitudinal, longitudinal arms. structure event can repeating nonrepeating. REDCapTidieR v1.1.0, mixed structure instruments supported. granularity data tibble depends structure three: instrument, project, events associated instrument. Note: REDCap allow repeating instruments inside repeating event. See also: section Longitudinal REDCap projects Diving Deeper vignette. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"supertibble","dir":"Articles","previous_headings":"","what":"Supertibble","title":"Glossary of REDCap and REDCapTidieR Terms","text":"special tibble contains data metadata REDCap project returned read_redcap() function. row supertibble corresponds one instrument. redcap_form_name redcap_form_label columns identify instrument. redcap_data redcap_metadata contain instrument’s data tibble metadata tibble. Additional columns contain useful information data tibble, row column counts, size memory, percentage missing values data. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"survey","dir":"Articles","previous_headings":"","what":"Survey","title":"Glossary of REDCap and REDCapTidieR Terms","text":"special kind instrument can completed someone user REDCap project. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"tibble","dir":"Articles","previous_headings":"","what":"Tibble","title":"Glossary of REDCap and REDCapTidieR Terms","text":"variant R data frame makes data analysis tidyverse little easier. data structures generated REDCapTidieR based tibbles. See also: chapter Tibbles R Data Science. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"tidy","dir":"Articles","previous_headings":"","what":"Tidy","title":"Glossary of REDCap and REDCapTidieR Terms","text":"term “tidy” part REDCapTidieR’s name underlies two key ideas package. first concept Tidy Data. rectangular data structure tidy : variable forms column observation forms row type observational unit forms table (.e. granularity rows table consistent) Data returned REDCap API (“block matrix”) often satisfies first two requirements tidy data. However, project contains repeating nonrepeating instruments /events granularity inconsistent row row. key function REDCapTidieR package break block matrix instrument. resulting set data tibbles tends tidier block matrix, granularity within individual data tibble consistent. makes easy work . second idea Tidy Tools, set design guidelines packages Tidyverse. Tidy tools follow following principles: Reuse existing data structures. Compose simple functions pipe. Embrace functional programming. Design humans. strive follow principles design REDCapTidieR package. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"variable","dir":"Articles","previous_headings":"","what":"Variable","title":"Glossary of REDCap and REDCapTidieR Terms","text":"column data frame tibble. See also: Column. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/glossary.html","id":"variable-label","dir":"Articles","previous_headings":"","what":"Variable label","title":"Glossary of REDCap and REDCapTidieR Terms","text":"human-readable description (label) attached variable. See also: labelled. ↩︎","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/labelled.html","id":"options-for-importing-categorical-variables","dir":"Articles","previous_headings":"","what":"Options for Importing Categorical Variables","title":"Using Labelled Vectors with REDCapTidieR","text":"importing data REDCap using read_redcap(), several options handling coded categorical variables. options determine coded values represented R environment. vignette, using sample classic project form comprises common REDCap data types. Using raw_or_label = \"raw\" retrieves raw coded values categorical variables. approach preserves original coding, ’ll need separately reference data dictionary REDCap interpret meaning code. default option, raw_or_label = \"label\", replaces code corresponding label converts categorical variables factors. convenient analysis discards original numeric codes, may necessary tasks like data cleaning re-exporting formats (e.g., Stata SPSS). third option, raw_or_label = \"haven_labelled\", imports categorical variables labelled vectors using “haven_labelled” class haven package (cf. vignette(\"semantics\", package = \"haven\")). method imports categorical variables using original coding attaches corresponding value labels metadata.","code":"library(REDCapTidieR) token <- \"123456789ABCDEF123456789ABCDEF04\" redcap_uri <- \"https://my.institution.edu/redcap/api/\" redcap_form <-   read_redcap(     redcap_uri,     token,     raw_or_label = \"raw\"   ) |>   extract_tibble(\"labelled_vignette\")  redcap_form #> # A tibble: 4 × 7 #>   record_id text_box_1 radio_buttons_1 checkbox___1 checkbox___2 checkbox___3 #>       <dbl> <chr>                <dbl>        <dbl>        <dbl>        <dbl> #> 1         1 Record 1                 1            1            0            0 #> 2         2 Record 2                 2            1            1            0 #> 3         3 Record 3                 3            0            1            1 #> 4         4 Record 4                 1            0            0            0 #> # ℹ 1 more variable: form_status_complete <dbl> redcap_form <-   read_redcap(     redcap_uri,     token,     raw_or_label = \"label\"   ) |>   extract_tibble(\"labelled_vignette\")  redcap_form #> # A tibble: 4 × 7 #>   record_id text_box_1 radio_buttons_1 checkbox___1 checkbox___2 checkbox___3 #>       <dbl> <chr>      <fct>           <lgl>        <lgl>        <lgl>        #> 1         1 Record 1   A               TRUE         FALSE        FALSE        #> 2         2 Record 2   B               TRUE         TRUE         FALSE        #> 3         3 Record 3   C               FALSE        TRUE         TRUE         #> 4         4 Record 4   A               FALSE        FALSE        FALSE        #> # ℹ 1 more variable: form_status_complete <fct> redcap_form <-   read_redcap(     redcap_uri,     token,     raw_or_label = \"haven\"   ) |>   extract_tibble(\"labelled_vignette\")  redcap_form #> # A tibble: 4 × 7 #>   record_id text_box_1 radio_buttons_1 checkbox___1 checkbox___2 checkbox___3 #>       <dbl> <chr>      <dbl+lbl>       <lgl>        <lgl>        <lgl>        #> 1         1 Record 1   1 [A]           TRUE         FALSE        FALSE        #> 2         2 Record 2   2 [B]           TRUE         TRUE         FALSE        #> 3         3 Record 3   3 [C]           FALSE        TRUE         TRUE         #> 4         4 Record 4   1 [A]           FALSE        FALSE        FALSE        #> # ℹ 1 more variable: form_status_complete <dbl+lbl>"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/labelled.html","id":"pros-cons-of-labelled-vectors","dir":"Articles","previous_headings":"","what":"Pros & Cons of Labelled Vectors","title":"Using Labelled Vectors with REDCapTidieR","text":"\"haven_labelled\" class originally developed import data statistical software like SPSS, Stata, SAS, use value labels categorical variables. format allows store original coding labels attached value.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/labelled.html","id":"advantages","dir":"Articles","previous_headings":"Pros & Cons of Labelled Vectors","what":"Advantages","title":"Using Labelled Vectors with REDCapTidieR","text":"Preservation Original Coding: numeric codes labels retained, useful data cleaning re-exporting. Metadata Management: labelled package offers functions manage value labels effectively. can manipulate value labels using functions : labelled::set_value_labels() labelled::get_value_labels() labelled::add_value_labels() labelled::remove_value_labels() Additionally, can search variables generate variable dictionary labelled::look_for() (cf. vignette(\"look_for\", package = \"labelled\")):","code":"library(labelled) redcap_form |>   look_for() #>  pos variable             label col_type missing values         #>  1   record_id            —     dbl      0                      #>  2   text_box_1           —     chr      0                      #>  3   radio_buttons_1      —     dbl+lbl  0       [1] A          #>                                                  [2] B          #>                                                  [3] C          #>  4   checkbox___1         —     lgl      0                      #>  5   checkbox___2         —     lgl      0                      #>  6   checkbox___3         —     lgl      0                      #>  7   form_status_complete —     dbl+lbl  0       [0] Incomplete #>                                                  [1] Unverified #>                                                  [2] Complete"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/labelled.html","id":"disadvantages","dir":"Articles","previous_headings":"Pros & Cons of Labelled Vectors","what":"Disadvantages","title":"Using Labelled Vectors with REDCapTidieR","text":"Labelled vectors optimized data analysis tasks like descriptive statistics, plotting, modeling. purposes, categorical variables converted factors numeric vectors.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/labelled.html","id":"recommended-approaches","dir":"Articles","previous_headings":"Pros & Cons of Labelled Vectors","what":"Recommended Approaches","title":"Using Labelled Vectors with REDCapTidieR","text":"Approach : Convert haven_labelled vectors factors numeric/character vectors just import using functions like labelled::unlabelled(), labelled::to_factor(), unclass(). Proceed data cleaning, recoding, analysis using standard R vector types. Approach B: Retain haven_labelled vectors data cleaning coding preserve original labels, especially plan re-export data. Use labelled functions manage value labels, convert vectors factors numeric types performing analysis modeling.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/articles/labelled.html","id":"managing-variable-labels","dir":"Articles","previous_headings":"","what":"Managing Variable Labels","title":"Using Labelled Vectors with REDCapTidieR","text":"’s important distinguish value labels variable labels: Value Labels: Describe meaning specific values within vector change vector’s class \"haven_labelled\". Variable Labels: Provide textual description entire variable without altering class. labelled package offers functions handle variable labels, : labelled::set_variable_labels() labelled::get_variable_labels() Using REDCapTidieR::make_labelled() allows add variable labels data frames exported REDCap: ensures data retains value labels also includes descriptive labels variable, enhancing readability usability dataset.","code":"redcap_form <-   read_redcap(     redcap_uri,     token,     raw_or_label = \"haven\"   ) |>   make_labelled() |>   extract_tibble(\"labelled_vignette\")  redcap_form |>   look_for() #>  pos variable             label                col_type missing values         #>  1   record_id            Record ID            dbl      0                      #>  2   text_box_1           Text Box             chr      0                      #>  3   radio_buttons_1      Radio Buttons        dbl+lbl  0       [1] A          #>                                                                 [2] B          #>                                                                 [3] C          #>  4   checkbox___1         Checkbox: A          lgl      0                      #>  5   checkbox___2         Checkbox: B          lgl      0                      #>  6   checkbox___3         Checkbox: C          lgl      0                      #>  7   form_status_complete REDCap Instrument C~ dbl+lbl  0       [0] Incomplete #>                                                                 [1] Unverified #>                                                                 [2] Complete"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Richard Hanna. Author, maintainer. Stephan Kadauke. Author. Ezra Porter. Author.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hanna R, Kadauke S, Porter E (2025). REDCapTidieR: Extract 'REDCap' Databases Tidy 'Tibble's. R package version 1.2.2.9000, https://chop-cgtinformatics.github.io/REDCapTidieR/.","code":"@Manual{,   title = {REDCapTidieR: Extract 'REDCap' Databases into Tidy 'Tibble's},   author = {Richard Hanna and Stephan Kadauke and Ezra Porter},   year = {2025},   note = {R package version 1.2.2.9000},   url = {https://chop-cgtinformatics.github.io/REDCapTidieR/}, }"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/index.html","id":"redcaptidier-","dir":"","previous_headings":"","what":"Import REDCap databases into tidy tibbles","title":"Import REDCap databases into tidy tibbles","text":"REDCapTidieR package provides elegant way import data REDCap project R environment. builds upon REDCapR package query REDCap API transforms returned data set tidy tibbles. REDCapTidieR especially useful dealing complex REDCap projects longitudinal include repeating instruments .","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Import REDCap databases into tidy tibbles","text":"release version can installed CRAN. can install development version REDCapTidieR GitHub:","code":"install.packages(\"REDCapTidieR\") devtools::install_github(\"CHOP-CGTInformatics/REDCapTidieR\")"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Import REDCap databases into tidy tibbles","text":"Use read_redcap() together bind_tibbles() import data instruments environment. Demonstration using read_redcap() bind_tibbles() functions REDCapTidieR supports labelled data using labelled package, can generate statistical summaries using skimr package. Read Getting Started vignette learn . addition, can easily create collaborator-friendly Excel files using write_redcap_xlsx() function: Sample REDCapTidieR .xlsx output using write_redcap_xlsx() learn work customize output, read Exporting Excel vignette.","code":"redcap_uri <- \"https://my.institution.edu/redcap/api/\" token <- \"123456789ABCDEF123456789ABCDEF04\"  my_redcap_data <- read_redcap(redcap_uri, token) write_redcap_xlsx(my_redcap_data, file = \"my_redcap_data.xlsx\")"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/index.html","id":"collaboration","dir":"","previous_headings":"","what":"Collaboration","title":"Import REDCap databases into tidy tibbles","text":"invite give feedback collaborate us! familiar GitHub R packages, please feel free submit pull request. Please let us know REDCapTidieR fails whatever reason database submit bug report creating GitHub issue. Please note project released Contributor Code Conduct. participating agree abide terms. ’d like thank following folks advice code contributions: Beasley Paul Wildenhain.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Import REDCap databases into tidy tibbles","text":"package developed Children’s Hospital Philadelphia Cell Gene Therapy Informatics Team support needs Cellular Therapy Transplant Section. development funded using following sources: Stephan Kadauke Start-funds. Stephan Kadauke, PI, CHOP, 2018-2024 CHOP-based GMP cell manufacturing (MFG) CAR T clinical trials. Stephan Grupp, PI; Stephan Kadauke, co-PI, CHOP, 2021-2023","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/REDCapTidieR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"REDCapTidieR: Extract 'REDCap' Databases into Tidy 'Tibble's — REDCapTidieR-package","title":"REDCapTidieR: Extract 'REDCap' Databases into Tidy 'Tibble's — REDCapTidieR-package","text":"Convert 'REDCap' exports tidy tables easy handling 'REDCap' repeat instruments event arms.","code":""},{"path":[]},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/REDCapTidieR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"REDCapTidieR: Extract 'REDCap' Databases into Tidy 'Tibble's — REDCapTidieR-package","text":"Maintainer: Richard Hanna hannar1@chop.edu (ORCID) Authors: Stephan Kadauke kadaukes@chop.edu (ORCID) Ezra Porter ezrajporter@gmail.com (ORCID)","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_event_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Supplement a supertibble from a longitudinal database with information about the events associated with each instrument — add_event_mapping","title":"Supplement a supertibble from a longitudinal database with information about the events associated with each instrument — add_event_mapping","text":"Supplement supertibble longitudinal database information events associated instrument","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_event_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supplement a supertibble from a longitudinal database with information about the events associated with each instrument — add_event_mapping","text":"","code":"add_event_mapping(supertbl, linked_arms, repeat_event_types)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_event_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supplement a supertibble from a longitudinal database with information about the events associated with each instrument — add_event_mapping","text":"supertbl supertibble object supplement metadata linked_arms tibble event mappings created link_arms() repeat_event_types dataframe output get_repeat_event_types() specifies NR, RS, RT types events","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_event_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supplement a supertibble from a longitudinal database with information about the events associated with each instrument — add_event_mapping","text":"original supertibble events redcap_events list column containing arms events associated instrument","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_labelled_xlsx_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Add labelled features to write_redcap_xlsx — add_labelled_xlsx_features","title":"Add labelled features to write_redcap_xlsx — add_labelled_xlsx_features","text":"Helper function support labelled aesthetics XLSX supertibble output","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_labelled_xlsx_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add labelled features to write_redcap_xlsx — add_labelled_xlsx_features","text":"","code":"add_labelled_xlsx_features(   supertbl,   supertbl_meta,   wb,   sheet_vals,   include_toc_sheet = TRUE,   include_metadata_sheet = TRUE,   supertbl_toc = NULL )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_labelled_xlsx_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add labelled features to write_redcap_xlsx — add_labelled_xlsx_features","text":"supertbl supertibble generated using read_redcap() supertbl_meta supertibble metadata generated bind_supertbl_metadata() wb openxlsx2 workbook object sheet_vals Helper argument passed write_redcap_xlsx determine assign sheet values. include_toc_sheet Include sheet capturing supertibble output. Default TRUE. include_metadata_sheet Include sheet capturing combined output supertibble redcap_metadata. Default TRUE. supertbl_toc table contents supertibble defined parent function. Default NULL.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Supplement a supertibble with additional metadata fields — add_metadata","title":"Supplement a supertibble with additional metadata fields — add_metadata","text":"Supplement supertibble additional metadata fields","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supplement a supertibble with additional metadata fields — add_metadata","text":"","code":"add_metadata(   supertbl,   db_metadata,   redcap_uri,   token,   suppress_redcapr_messages )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supplement a supertibble with additional metadata fields — add_metadata","text":"supertbl supertibble object supplement metadata db_metadata REDCap metadata tibble redcap_uri URI/URL REDCap server (e.g., \"https://server.org/apps/redcap/api/\"). Required. token user-specific string serves password project. Required. suppress_redcapr_messages logical control whether suppress messages REDCapR API calls. Default TRUE.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supplement a supertibble with additional metadata fields — add_metadata","text":"original supertibble additional fields: instrument_label containing labels instrument redcap_metadata containing metadata fields instrument list column","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Supplement a supertibble with additional metadata fields — add_metadata","text":"function assumes db_metadata processed include row option multiselection field, .e. update_field_names()","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata_sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the metadata sheet — add_metadata_sheet","title":"Add the metadata sheet — add_metadata_sheet","text":"Internal helper function. Adds appropriate elements wb object. Returns dataframe.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata_sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the metadata sheet — add_metadata_sheet","text":"","code":"add_metadata_sheet(   supertbl,   supertbl_meta,   wb,   add_labelled_column_headers,   table_style,   column_width,   na_replace )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata_sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the metadata sheet — add_metadata_sheet","text":"supertbl supertibble generated using read_redcap() supertbl_meta unnest-ed metadata tibble supertibble wb openxlsx2 workbook object add_labelled_column_headers Whether include labelled outputs. table_style excel table style name \"none\" (see \"formatting\" openxlsx2::wb_add_data_table()). Default \"tableStyleLight8\". column_width Width set columns across workbook. Default \"auto\", otherwise numeric value. Standard Excel 8.43. na_replace value used replace NA values supertbl. default \"\".","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_metadata_sheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the metadata sheet — add_metadata_sheet","text":"dataframe","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_partial_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Add partial key helper variables to dataframes — add_partial_keys","title":"Add partial key helper variables to dataframes — add_partial_keys","text":"Make helper variables redcap_event redcap_arm available branches var later use.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_partial_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add partial key helper variables to dataframes — add_partial_keys","text":"","code":"add_partial_keys(db_data, var = NULL)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_partial_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add partial key helper variables to dataframes — add_partial_keys","text":"db_data REDCap database output defined REDCapR::redcap_read_oneshot()$data var unquoted name field containing event arm identifiers. Default NULL.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_partial_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add partial key helper variables to dataframes — add_partial_keys","text":"Two appended columns, redcap_event redcap_arm end read_redcap output tibbles.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_skimr_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add skimr metrics to a supertibble's metadata — add_skimr_metadata","title":"Add skimr metrics to a supertibble's metadata — add_skimr_metadata","text":"Add default skim metrics redcap_data list elements supertibble output read_readcap.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_skimr_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add skimr metrics to a supertibble's metadata — add_skimr_metadata","text":"","code":"add_skimr_metadata(supertbl)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_skimr_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add skimr metrics to a supertibble's metadata — add_skimr_metadata","text":"supertbl supertibble generated using read_redcap()","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_skimr_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add skimr metrics to a supertibble's metadata — add_skimr_metadata","text":"supertibble skimr metadata metrics","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_skimr_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add skimr metrics to a supertibble's metadata — add_skimr_metadata","text":"information default metrics provided, check get_default_skimmer_names documentation.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_skimr_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add skimr metrics to a supertibble's metadata — add_skimr_metadata","text":"","code":"superheroes_supertbl #> # A REDCapTidieR Supertibble with 2 instruments #>   redcap_form_name   redcap_form_label  redcap_data redcap_metadata    structure #>   <chr>              <chr>              <list>      <list>             <chr>     #> 1 heroes_information Heroes Information <tibble>    <tibble [11 × 17]> nonrepea… #> 2 super_hero_powers  Super Hero Powers  <tibble>    <tibble [2 × 17]>  repeating #> # ℹ 4 more variables: data_rows <int>, data_cols <int>, data_size <lbstr_by>, #> #   data_na_pct <formttbl>  add_skimr_metadata(superheroes_supertbl) #> # A REDCapTidieR Supertibble with 2 instruments #>   redcap_form_name   redcap_form_label  redcap_data redcap_metadata    structure #>   <chr>              <chr>              <list>      <list>             <chr>     #> 1 heroes_information Heroes Information <tibble>    <tibble [11 × 33]> nonrepea… #> 2 super_hero_powers  Super Hero Powers  <tibble>    <tibble [2 × 33]>  repeating #> # ℹ 4 more variables: data_rows <int>, data_cols <int>, data_size <lbstr_by>, #> #   data_na_pct <formttbl>  if (FALSE) { # \\dontrun{ redcap_uri <- Sys.getenv(\"REDCAP_URI\") token <- Sys.getenv(\"REDCAP_TOKEN\")  supertbl <- read_redcap(redcap_uri, token) add_skimr_metadata(supertbl) } # }"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_supertbl_toc.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the supertbl table of contents sheet — add_supertbl_toc","title":"Add the supertbl table of contents sheet — add_supertbl_toc","text":"Internal helper function. Adds appropriate elements wb object. Returns dataframe.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_supertbl_toc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the supertbl table of contents sheet — add_supertbl_toc","text":"","code":"add_supertbl_toc(   wb,   supertbl,   include_metadata_sheet,   add_labelled_column_headers,   table_style,   column_width,   na_replace )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_supertbl_toc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the supertbl table of contents sheet — add_supertbl_toc","text":"wb openxlsx2 workbook object supertbl supertibble generated using read_redcap() include_metadata_sheet Include sheet capturing combined output supertibble redcap_metadata. add_labelled_column_headers Whether include labelled outputs. table_style excel table style name \"none\" (see \"formatting\" openxlsx2::wb_add_data_table()). Default \"tableStyleLight8\". column_width Width set columns across workbook. Default \"auto\", otherwise numeric value. Standard Excel 8.43. na_replace value used replace NA values supertbl. default \"\".","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/add_supertbl_toc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the supertbl table of contents sheet — add_supertbl_toc","text":"dataframe","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/apply_labs_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply factor labels to a vector — apply_labs_factor","title":"Apply factor labels to a vector — apply_labs_factor","text":"Apply factor labels vector","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/apply_labs_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply factor labels to a vector — apply_labs_factor","text":"","code":"apply_labs_factor(x, labels, ...)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/apply_labs_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply factor labels to a vector — apply_labs_factor","text":"x vector label labels named vector labels format c(value = label) ... unused, needed ignore extra arguments may passed","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/apply_labs_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply factor labels to a vector — apply_labs_factor","text":"factor","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/apply_labs_factor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply factor labels to a vector — apply_labs_factor","text":"Dots needed ignore ptype argument may passed apply_labs_haven","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/apply_labs_haven.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply haven value labels to a vector — apply_labs_haven","title":"Apply haven value labels to a vector — apply_labs_haven","text":"Apply haven value labels vector","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/apply_labs_haven.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply haven value labels to a vector — apply_labs_haven","text":"","code":"apply_labs_haven(x, labels, ptype, ...)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/apply_labs_haven.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply haven value labels to a vector — apply_labs_haven","text":"x vector label labels named vector labels format c(value = label) ptype vector serve prototype label values ... unused, needed ignore extra arguments may passed","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/apply_labs_haven.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply haven value labels to a vector — apply_labs_haven","text":"haven_labelled vector","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/apply_labs_haven.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply haven value labels to a vector — apply_labs_haven","text":"Assumes check_installed() run labelled. Since haven preserves underlying data values need make sure data type value options metadata matches data type values actual data. function accepts prototype, usually column db_data, uses force_cast() best-effort casting value options metadata data type ptype. fallback convert x value labels character.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/as_supertbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Add supertbl S3 class — as_supertbl","title":"Add supertbl S3 class — as_supertbl","text":"Add supertbl S3 class","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/as_supertbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add supertbl S3 class — as_supertbl","text":"","code":"as_supertbl(x)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/as_supertbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add supertbl S3 class — as_supertbl","text":"x object class","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/as_supertbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add supertbl S3 class — as_supertbl","text":"object redcaptidier_supertbl S3 class","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_supertbl_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind supertbl metadata — bind_supertbl_metadata","title":"Bind supertbl metadata — bind_supertbl_metadata","text":"Simple helper function binding supertbl metadata one table. supports creating metadata XLSX sheet well supertbl_recode.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_supertbl_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind supertbl metadata — bind_supertbl_metadata","text":"","code":"bind_supertbl_metadata(supertbl)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_supertbl_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind supertbl metadata — bind_supertbl_metadata","text":"supertbl supertibble generated using read_redcap()","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_tibbles.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data tibbles from a REDCapTidieR supertibble and bind them to an environment — bind_tibbles","title":"Extract data tibbles from a REDCapTidieR supertibble and bind them to an environment — bind_tibbles","text":"Take supertibble generated read_redcap() bind data tibbles (.e. tibbles redcap_data column) environment. default global environment.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_tibbles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data tibbles from a REDCapTidieR supertibble and bind them to an environment — bind_tibbles","text":"","code":"bind_tibbles(supertbl, environment = global_env(), tbls = NULL)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_tibbles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data tibbles from a REDCapTidieR supertibble and bind them to an environment — bind_tibbles","text":"supertbl supertibble generated read_redcap(). Required. environment environment bind tibbles . Default rlang::global_env(). tbls vector redcap_form_names data tibbles bind environment. Default NULL binds data tibbles.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_tibbles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data tibbles from a REDCapTidieR supertibble and bind them to an environment — bind_tibbles","text":"function returns nothing used solely side effect modifying environment.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/bind_tibbles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data tibbles from a REDCapTidieR supertibble and bind them to an environment — bind_tibbles","text":"","code":"if (FALSE) { # \\dontrun{ # Create an empty environment my_env <- new.env()  ls(my_env)  superheroes_supertbl  bind_tibbles(superheroes_supertbl, my_env)  ls(my_env) } # }"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/calc_metadata_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to calculate summary for each tibble in a supertibble — calc_metadata_stats","title":"Utility function to calculate summary for each tibble in a supertibble — calc_metadata_stats","text":"Utility function calculate summary tibble supertibble","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/calc_metadata_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to calculate summary for each tibble in a supertibble — calc_metadata_stats","text":"","code":"calc_metadata_stats(data)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/calc_metadata_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to calculate summary for each tibble in a supertibble — calc_metadata_stats","text":"data tibble redcap data stored redcap_data column supertibble","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/calc_metadata_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to calculate summary for each tibble in a supertibble — calc_metadata_stats","text":"list containing: data_rows, number rows data data_cols, number columns data data_size, size data bytes data_na_pct, percentage cells NA excluding identifiers form completion fields","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_data_arg_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check requested data argument exists in REDCap data — check_data_arg_exists","title":"Check requested data argument exists in REDCap data — check_data_arg_exists","text":"Provide error message argument requested, found read_redcap() redcap_data output.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_data_arg_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check requested data argument exists in REDCap data — check_data_arg_exists","text":"","code":"check_data_arg_exists(db_data, col, arg, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_data_arg_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check requested data argument exists in REDCap data — check_data_arg_exists","text":"db_data REDCap database output generated REDCapR::redcap_read_oneshot()$data col column check redcap_data arg argument used column check call calling environment use error message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_data_arg_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check requested data argument exists in REDCap data — check_data_arg_exists","text":"error message saying requested data exist","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_data_arg_exists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check requested data argument exists in REDCap data — check_data_arg_exists","text":"Currently used following arguments: export_survey_fields: *_timestamp export_data_access_groups: redcap_data_access_group","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_equal_col_summaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Check equal distinct values between two columns — check_equal_col_summaries","title":"Check equal distinct values between two columns — check_equal_col_summaries","text":"Takes dataframe two columns checks n_distinct second column unique based grouping first column.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_equal_col_summaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check equal distinct values between two columns — check_equal_col_summaries","text":"","code":"check_equal_col_summaries(data, col1, col2, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_equal_col_summaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check equal distinct values between two columns — check_equal_col_summaries","text":"data dataframe col1 column group col2 column check uniqueness","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_extra_field_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Check data field for field values not in metadata — check_extra_field_values","title":"Check data field for field values not in metadata — check_extra_field_values","text":"Check data field field values metadata","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_extra_field_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check data field for field values not in metadata — check_extra_field_values","text":"","code":"check_extra_field_values(x, values)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_extra_field_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check data field for field values not in metadata — check_extra_field_values","text":"x data field values expected field values","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_field_is_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse logical field and compile data for warning if parsing errors occurred — check_field_is_logical","title":"Parse logical field and compile data for warning if parsing errors occurred — check_field_is_logical","text":"Parse logical field compile data warning parsing errors occurred","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_field_is_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse logical field and compile data for warning if parsing errors occurred — check_field_is_logical","text":"","code":"check_field_is_logical(x)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_field_is_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse logical field and compile data for warning if parsing errors occurred — check_field_is_logical","text":"x vector parse","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_fields_are_checkboxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check fields are of checkbox field type — check_fields_are_checkboxes","title":"Check fields are of checkbox field type — check_fields_are_checkboxes","text":"Check fields checkbox field type","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_fields_are_checkboxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check fields are of checkbox field type — check_fields_are_checkboxes","text":"","code":"check_fields_are_checkboxes(metadata_tbl, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_fields_are_checkboxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check fields are of checkbox field type — check_fields_are_checkboxes","text":"metadata_tbl metadata tibble supertibble call calling environment use error message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_fields_exist.html","id":null,"dir":"Reference","previous_headings":"","what":"Check fields exist for checkbox combination — check_fields_exist","title":"Check fields exist for checkbox combination — check_fields_exist","text":"Check fields exist checkbox combination","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_fields_exist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check fields exist for checkbox combination — check_fields_exist","text":"","code":"check_fields_exist(fields, expr, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_fields_exist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check fields exist for checkbox combination — check_fields_exist","text":"fields Vector character strings check length expr expression call calling environment use error message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_file_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if file already exists — check_file_exists","title":"Check if file already exists — check_file_exists","text":"Provide error message file declared writing already exists.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_file_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if file already exists — check_file_exists","text":"","code":"check_file_exists(file, overwrite, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_file_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if file already exists — check_file_exists","text":"file file checked overwrite Whether file declared overwritten call calling environment use error message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_file_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if file already exists — check_file_exists","text":"error message saying requested file already exists","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_file_exists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if file already exists — check_file_exists","text":"case write_redcap_xlsx(), error file already exists declared overwite.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_forms_exist.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that all requested instruments are in REDCap project metadata — check_forms_exist","title":"Check that all requested instruments are in REDCap project metadata — check_forms_exist","text":"Provide error message instrument names passed read_redcap() exist project metadata.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_forms_exist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that all requested instruments are in REDCap project metadata — check_forms_exist","text":"","code":"check_forms_exist(db_metadata, forms, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_forms_exist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that all requested instruments are in REDCap project metadata — check_forms_exist","text":"db_metadata metadata file read REDCapR::redcap_metadata_read() forms character vector instrument names passed read_redcap() call calling environment use error message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_forms_exist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that all requested instruments are in REDCap project metadata — check_forms_exist","text":"error message listing requested instruments exist","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_labelled.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if labelled — check_labelled","title":"Check if labelled — check_labelled","text":"Checks supplied supertibble labelled throws error labelled set TRUE","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_labelled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if labelled — check_labelled","text":"","code":"check_labelled(supertbl, add_labelled_column_headers, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_labelled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if labelled — check_labelled","text":"supertbl supertibble generated using read_redcap() add_labelled_column_headers Whether include labelled outputs call calling environment use warning message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_labelled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if labelled — check_labelled","text":"boolean","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_metadata_fields_exist.html","id":null,"dir":"Reference","previous_headings":"","what":"Check metadata fields exist for checkbox combination — check_metadata_fields_exist","title":"Check metadata fields exist for checkbox combination — check_metadata_fields_exist","text":"Similar check_fields_exist(), instead verifying fields exist data tibble seeks verify existence metadata tibble field_names.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_metadata_fields_exist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check metadata fields exist for checkbox combination — check_metadata_fields_exist","text":"","code":"check_metadata_fields_exist(metadata_tbl, cols, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_metadata_fields_exist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check metadata fields exist for checkbox combination — check_metadata_fields_exist","text":"metadata_tbl metadata tibble supertibble generated read_redcap(). cols Selected columns identified combine_checkboxes() cross checked metadata_tibble$field_name call calling environment use error message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_parsed_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that parsed labels are not duplicated — check_parsed_labels","title":"Check that parsed labels are not duplicated — check_parsed_labels","text":"Check parsed labels duplicated","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_parsed_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that parsed labels are not duplicated — check_parsed_labels","text":"","code":"check_parsed_labels(   parsed_labels_output,   field_name,   warn_stripped_text = FALSE,   call = caller_env(n = 2) )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_parsed_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that parsed labels are not duplicated — check_parsed_labels","text":"parsed_labels_output vector parsed labels produced parse_labels() field_name name field associated labels use warning message warn_stripped_text logical whether include note HTML tag stripping message call calling environment use error message. parent calling environment default check usually occurs 2 frames relevant context user","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_parsed_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that parsed labels are not duplicated — check_parsed_labels","text":"warning message alerting specifying duplicate labels REDCap field affected","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_redcap_populated.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that a supplied REDCap database is populated — check_redcap_populated","title":"Check that a supplied REDCap database is populated — check_redcap_populated","text":"Check potential outputs metadata present, nrow ncol equal 0. causes multi_choice_to_labels fail, helpful error message provided.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_redcap_populated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that a supplied REDCap database is populated — check_redcap_populated","text":"","code":"check_redcap_populated(db_data, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_redcap_populated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that a supplied REDCap database is populated — check_redcap_populated","text":"db_data REDCap database output generated REDCapR::redcap_read_oneshot()$data call calling environment use error message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_redcap_populated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that a supplied REDCap database is populated — check_redcap_populated","text":"helpful error message alerting user check API privileges.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_repeat_and_nonrepeat.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for instruments that have both repeating and non-repeating structure — check_repeat_and_nonrepeat","title":"Check for instruments that have both repeating and non-repeating structure — check_repeat_and_nonrepeat","text":"Check potential instruments given repeating nonrepeating structure. REDCapTidieR support database structures built way.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_repeat_and_nonrepeat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for instruments that have both repeating and non-repeating structure — check_repeat_and_nonrepeat","text":"","code":"check_repeat_and_nonrepeat(db_data, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_repeat_and_nonrepeat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for instruments that have both repeating and non-repeating structure — check_repeat_and_nonrepeat","text":"db_data REDCap database output generated REDCapR::redcap_read_oneshot()$data call calling environment use error message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_repeat_and_nonrepeat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for instruments that have both repeating and non-repeating structure — check_repeat_and_nonrepeat","text":"helpful error message alerting user existence instrument designated repeating non-repeating.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_req_labelled_metadata_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that all metadata tibbles within a supertibble contain field_name and field_label columns — check_req_labelled_metadata_fields","title":"Check that all metadata tibbles within a supertibble contain field_name and field_label columns — check_req_labelled_metadata_fields","text":"Check metadata tibbles within supertibble contain field_name field_label columns","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_req_labelled_metadata_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that all metadata tibbles within a supertibble contain field_name and field_label columns — check_req_labelled_metadata_fields","text":"","code":"check_req_labelled_metadata_fields(supertbl, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_req_labelled_metadata_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that all metadata tibbles within a supertibble contain field_name and field_label columns — check_req_labelled_metadata_fields","text":"supertbl supertibble containing redcap_metadata column call calling environment use error message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_req_labelled_metadata_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that all metadata tibbles within a supertibble contain field_name and field_label columns — check_req_labelled_metadata_fields","text":"error message alerting instrument metadata incomplete","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_user_rights.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for possible API user privilege issues — check_user_rights","title":"Check for possible API user privilege issues — check_user_rights","text":"Check potential user access privilege issues provide appropriate warning message. can occur metadata forms/field names appear database export.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_user_rights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for possible API user privilege issues — check_user_rights","text":"","code":"check_user_rights(db_data, db_metadata, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_user_rights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for possible API user privilege issues — check_user_rights","text":"db_data REDCap database output generated REDCapR::redcap_read_oneshot()$data db_metadata REDCap metadata output generated REDCapR::redcap_metadata_read()$data call calling environment use warning message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/check_user_rights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for possible API user privilege issues — check_user_rights","text":"helpful error message alerting user check API privileges.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/checkmate.html","id":null,"dir":"Reference","previous_headings":"","what":"Check an argument with checkmate — checkmate","title":"Check an argument with checkmate — checkmate","text":"Check argument checkmate","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/checkmate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check an argument with checkmate — checkmate","text":"","code":"check_arg_is_supertbl(   x,   req_cols = c(\"redcap_data\", \"redcap_metadata\"),   arg = caller_arg(x),   call = caller_env() )  check_arg_is_env(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_character(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_logical(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_choices(x, ..., arg = caller_arg(x), call = caller_env())  check_arg_is_valid_token(x, arg = caller_arg(x), call = caller_env())  check_arg_is_valid_extension(   x,   valid_extensions,   arg = caller_arg(x),   call = caller_env() )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/checkmate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check an argument with checkmate — checkmate","text":"x object check req_cols required fields check_arg_is_supertbl() arg name argument include error message. Captured rlang::caller_arg() default call calling environment use error message ... additional arguments passed checkmate","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/checkmate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check an argument with checkmate — checkmate","text":"TRUE x passes checkmate check. error otherwise name checkmate function class","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract non-longitudinal REDCap databases into tidy tibbles — clean_redcap","title":"Extract non-longitudinal REDCap databases into tidy tibbles — clean_redcap","text":"Helper function internal read_redcap responsible extraction final processing tidy tibble user non-longitudinal REDCap database.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract non-longitudinal REDCap databases into tidy tibbles — clean_redcap","text":"","code":"clean_redcap(db_data, db_metadata)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract non-longitudinal REDCap databases into tidy tibbles — clean_redcap","text":"db_data REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata REDCap metadata output defined REDCapR::redcap_metadata_read()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract non-longitudinal REDCap databases into tidy tibbles — clean_redcap","text":"Returns tibble list elements containing tidy dataframes. Users can access dataframes redcap_data column reference form_name structure column details.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract longitudinal REDCap databases into tidy tibbles — clean_redcap_long","title":"Extract longitudinal REDCap databases into tidy tibbles — clean_redcap_long","text":"Helper function internal read_redcap responsible extraction final processing tidy tibble user longitudinal REDCap database.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract longitudinal REDCap databases into tidy tibbles — clean_redcap_long","text":"","code":"clean_redcap_long(   db_data_long,   db_metadata_long,   linked_arms,   allow_mixed_structure = FALSE )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract longitudinal REDCap databases into tidy tibbles — clean_redcap_long","text":"db_data_long longitudinal REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata_long longitudinal REDCap metadata output defined REDCapR::redcap_metadata_read()$data linked_arms Output link_arms, linking instruments REDCap events/arms allow_mixed_structure logical allow support mixed repeating/non-repeating instruments. Setting TRUE treat mixed instrument's non-repeating versions repeating instruments single instance. Applies longitudinal projects . Default FALSE.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/clean_redcap_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract longitudinal REDCap databases into tidy tibbles — clean_redcap_long","text":"Returns tibble list elements containing tidy dataframes. Users can access dataframes redcap_data column reference form_name structure column details.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/combine_and_repair_tbls.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine checkbox fields with respect to repaired outputs — combine_and_repair_tbls","title":"Combine checkbox fields with respect to repaired outputs — combine_and_repair_tbls","text":"function seeks preserve original data columns types originally supplied data_tbl add new columns data_tbl_mod. names_repair presents repair strategy, output columns captured updated dropping original columns.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/combine_and_repair_tbls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine checkbox fields with respect to repaired outputs — combine_and_repair_tbls","text":"","code":"combine_and_repair_tbls(data_tbl, data_tbl_mod, new_cols, names_repair)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/combine_and_repair_tbls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine checkbox fields with respect to repaired outputs — combine_and_repair_tbls","text":"data_tbl original data table given combine_checkboxes() data_tbl_mod modified data table data_tbl new_cols new columns created checkbox combination names_repair happens output invalid column names? default, \"check_unique\" error columns duplicated. Use \"minimal\" allow duplicates output, \"unique\" de-duplicated adding numeric suffixes. See vctrs::vec_as_names() options.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/combine_and_repair_tbls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine checkbox fields with respect to repaired outputs — combine_and_repair_tbls","text":"tibble","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/combine_checkboxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Checkbox Fields into a Single Column — combine_checkboxes","title":"Combine Checkbox Fields into a Single Column — combine_checkboxes","text":"combine_checkboxes() consolidates multiple checkbox fields REDCap data tibble single column. transformation simplifies analysis merging several binary columns one labeled factor column, making data interpretable easier analyze.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/combine_checkboxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Checkbox Fields into a Single Column — combine_checkboxes","text":"","code":"combine_checkboxes(   supertbl,   tbl,   cols,   names_prefix = \"\",   names_sep = \"_\",   names_glue = NULL,   names_repair = \"check_unique\",   multi_value_label = \"Multiple\",   values_fill = NA,   raw_or_label = \"label\",   keep = TRUE )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/combine_checkboxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Checkbox Fields into a Single Column — combine_checkboxes","text":"supertbl supertibble generated read_redcap(). Required. tbl redcap_form_name data tibble extract. Required. cols Checkbox columns combine single column. Required. names_prefix String added start every variable name. names_sep String separate new column names names_prefix. names_glue Instead names_sep names_prefix, can supply glue specification unique .value create custom column names. names_repair happens output invalid column names? default, \"check_unique\" error columns duplicated. Use \"minimal\" allow duplicates output, \"unique\" de-duplicated adding numeric suffixes. See vctrs::vec_as_names() options. multi_value_label string specifying value used multiple checkbox fields selected. Default \"Multiple\". values_fill Value use checkboxes selected. Default NA. raw_or_label Either 'raw' 'label' specify whether use raw coded values labels options. Default 'label'. keep Logical indicating whether keep original checkbox fields output. Default TRUE.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/combine_checkboxes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Checkbox Fields into a Single Column — combine_checkboxes","text":"modified supertibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/combine_checkboxes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine Checkbox Fields into a Single Column — combine_checkboxes","text":"combine_checkboxes() operates data metadata tibbles produced read_redcap() function. Since relies checkbox field naming conventions used REDCap, changes checkbox variable names associated metadata field_names lead errors. REDCap checkbox fields typically expanded separate variables checkbox option, names formatted checkbox_var___1, checkbox_var___2, etc. combine_checkboxes() detects variables combines single column. expected variables found, error returned.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/combine_checkboxes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Checkbox Fields into a Single Column — combine_checkboxes","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union # Set up sample data tibble data_tbl <- tibble::tribble(   ~\"study_id\", ~\"multi___1\", ~\"multi___2\", ~\"multi___3\",   1, TRUE, FALSE, FALSE,   2, TRUE, TRUE, FALSE,   3, FALSE, FALSE, FALSE )  # Set up sample metadata tibble metadata_tbl <- tibble::tribble(   ~\"field_name\", ~\"field_type\", ~\"select_choices_or_calculations\",   \"study_id\", \"text\", NA,   \"multi___1\", \"checkbox\", \"1, Red | 2, Yellow | 3, Blue\",   \"multi___2\", \"checkbox\", \"1, Red | 2, Yellow | 3, Blue\",   \"multi___3\", \"checkbox\", \"1, Red | 2, Yellow | 3, Blue\" )  # Create sample supertibble supertbl <- tibble::tribble(   ~\"redcap_form_name\", ~\"redcap_data\", ~\"redcap_metadata\",   \"tbl\", data_tbl, metadata_tbl )  class(supertbl) <- c(\"redcap_supertbl\", class(supertbl))  # Combine checkboxes under column \"multi\" combine_checkboxes(   supertbl = supertbl,   tbl = \"tbl\",   cols = starts_with(\"multi\") ) %>%   dplyr::pull(redcap_data) %>%   dplyr::first() #> # A tibble: 3 × 5 #>   study_id multi___1 multi___2 multi___3 multi    #>      <dbl> <lgl>     <lgl>     <lgl>     <fct>    #> 1        1 TRUE      FALSE     FALSE     Red      #> 2        2 TRUE      TRUE      FALSE     Multiple #> 3        3 FALSE     FALSE     FALSE     NA        if (FALSE) { # \\dontrun{  redcap_uri <- Sys.getenv(\"REDCAP_URI\") token <- Sys.getenv(\"REDCAP_TOKEN\")  supertbl <- read_redcap(redcap_uri, token) combine_checkboxes(   supertbl = supertbl,   tbl = \"tbl\",   cols = starts_with(\"col\"),   multi_value_label = \"Multiple\",   values_fill = NA ) } # }"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/convert_checkbox_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a new checkbox column's values — convert_checkbox_vals","title":"Convert a new checkbox column's values — convert_checkbox_vals","text":"function takes single column data converts values based overall data tibble cross referenced nested section metadata tibble. case_when logic helps determine whether value coalesced singular value user-specified one via multi_value_label values_fill.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/convert_checkbox_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a new checkbox column's values — convert_checkbox_vals","text":"","code":"convert_checkbox_vals(   metadata,   .new_value,   data_tbl,   raw_or_label,   multi_value_label,   values_fill )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/convert_checkbox_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a new checkbox column's values — convert_checkbox_vals","text":"metadata nested portion overall metadata tibble .new_value new column values made combine_checkboxes() data_tbl data tibble original supertibble raw_or_label Either 'raw' 'label' specify whether use raw coded values labels options. Default 'label'. multi_value_label string specifying value used multiple checkbox fields selected. Default \"Multiple\". values_fill Value use checkboxes selected. Default NA.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/convert_checkbox_vals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a new checkbox column's values — convert_checkbox_vals","text":"function used conjunction pmap().","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/convert_mixed_instrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Mixed Structure Instruments to Repeating Instruments — convert_mixed_instrument","title":"Convert Mixed Structure Instruments to Repeating Instruments — convert_mixed_instrument","text":"longitudinal projects users set allow_mixed_structure TRUE, function handle process setting nonrepeating parts instrument repeating ones single instance.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/convert_mixed_instrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Mixed Structure Instruments to Repeating Instruments — convert_mixed_instrument","text":"","code":"convert_mixed_instrument(db_data_long, mixed_structure_ref)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/convert_mixed_instrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Mixed Structure Instruments to Repeating Instruments — convert_mixed_instrument","text":"db_data_long longitudinal REDCap database output defined REDCapR::redcap_read_oneshot()$data mixed_structure_ref Reference dataframe containing mixed structure fields forms.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/convert_mixed_instrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Mixed Structure Instruments to Repeating Instruments — convert_mixed_instrument","text":"Returns tibble list elements containing tidy dataframes. Users can access dataframes redcap_data column reference form_name structure column details.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/create_repeat_instance_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to convert redcap repeat instance columns into appropriate form and event columns — create_repeat_instance_vars","title":"Utility function to convert redcap repeat instance columns into appropriate form and event columns — create_repeat_instance_vars","text":"Utility function convert redcap repeat instance columns appropriate form event columns","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/create_repeat_instance_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to convert redcap repeat instance columns into appropriate form and event columns — create_repeat_instance_vars","text":"","code":"create_repeat_instance_vars(db_data)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/create_repeat_instance_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to convert redcap repeat instance columns into appropriate form and event columns — create_repeat_instance_vars","text":"db_data REDCap database output generated REDCapR::redcap_read_oneshot()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/create_repeat_instance_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to convert redcap repeat instance columns into appropriate form and event columns — create_repeat_instance_vars","text":"dataframe.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/create_repeat_instance_vars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility function to convert redcap repeat instance columns into appropriate form and event columns — create_repeat_instance_vars","text":"output standard REDCap export repeating forms /events makes use redcap_repeat_instance combination redcap_repeat_instrument whether data exists . Instead, rename separate redcap_repeat_instance redcap_form_instance redcap_event_instance.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/db_has_repeat_forms.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether a REDCap database has repeat forms — db_has_repeat_forms","title":"Check whether a REDCap database has repeat forms — db_has_repeat_forms","text":"Simple utility function checking existence repeat forms REDCap database.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/db_has_repeat_forms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether a REDCap database has repeat forms — db_has_repeat_forms","text":"","code":"db_has_repeat_forms(db_data)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/db_has_repeat_forms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether a REDCap database has repeat forms — db_has_repeat_forms","text":"db_data REDCap dataframe.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/db_has_repeat_forms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether a REDCap database has repeat forms — db_has_repeat_forms","text":"boolean.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract non-repeat tables from non-longitudinal REDCap databases — distill_nonrepeat_table","title":"Extract non-repeat tables from non-longitudinal REDCap databases — distill_nonrepeat_table","text":"Sub-helper function clean_redcap single nonrepeat table extraction.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract non-repeat tables from non-longitudinal REDCap databases — distill_nonrepeat_table","text":"","code":"distill_nonrepeat_table(form_name, db_data, db_metadata)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract non-repeat tables from non-longitudinal REDCap databases — distill_nonrepeat_table","text":"form_name form_name described named column REDCap metadata. db_data REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata REDCap metadata output defined REDCapR::redcap_metadata_read()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract non-repeat tables from non-longitudinal REDCap databases — distill_nonrepeat_table","text":"subset tibble data related specified form_name","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract non-repeat tables from longitudinal REDCap databases — distill_nonrepeat_table_long","title":"Extract non-repeat tables from longitudinal REDCap databases — distill_nonrepeat_table_long","text":"Sub-helper function clean_redcap_long single nonrepeat table extraction.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract non-repeat tables from longitudinal REDCap databases — distill_nonrepeat_table_long","text":"","code":"distill_nonrepeat_table_long(   form_name,   db_data_long,   db_metadata_long,   linked_arms )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract non-repeat tables from longitudinal REDCap databases — distill_nonrepeat_table_long","text":"form_name form_name described named column REDCap metadata. db_data_long REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata_long REDCap metadata output defined REDCapR::redcap_metadata_read()$data linked_arms Output link_arms, linking instruments REDCap events/arms","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_nonrepeat_table_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract non-repeat tables from longitudinal REDCap databases — distill_nonrepeat_table_long","text":"tibble data related specified form_name","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract repeat tables from non-longitudinal REDCap databases — distill_repeat_table","title":"Extract repeat tables from non-longitudinal REDCap databases — distill_repeat_table","text":"Sub-helper function clean_redcap single repeat table extraction.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract repeat tables from non-longitudinal REDCap databases — distill_repeat_table","text":"","code":"distill_repeat_table(form_name, db_data, db_metadata)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract repeat tables from non-longitudinal REDCap databases — distill_repeat_table","text":"form_name form_name described named column REDCap metadata. db_data non-longitudinal REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata non-longitudinal REDCap metadata output defined REDCapR::redcap_metadata_read()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract repeat tables from non-longitudinal REDCap databases — distill_repeat_table","text":"subset tibble data related specified form_name","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract repeat tables from longitudinal REDCap databases — distill_repeat_table_long","title":"Extract repeat tables from longitudinal REDCap databases — distill_repeat_table_long","text":"Sub-helper function clean_redcap_long single repeat table extraction.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract repeat tables from longitudinal REDCap databases — distill_repeat_table_long","text":"","code":"distill_repeat_table_long(   form_name,   db_data_long,   db_metadata_long,   linked_arms,   has_mixed_structure_forms = FALSE,   mixed_structure_ref = NULL )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract repeat tables from longitudinal REDCap databases — distill_repeat_table_long","text":"form_name form_name described named column REDCap metadata. db_data_long REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata_long REDCap metadata output defined REDCapR::redcap_metadata_read()$data linked_arms Output link_arms, linking instruments REDCap events/arms has_mixed_structure_forms Whether instrument evaluation mixed structure. Default FALSE. mixed_structure_ref mixed structure reference dataframe supplied get_mixed_structure_fields().","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/distill_repeat_table_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract repeat tables from longitudinal REDCap databases — distill_repeat_table_long","text":"tibble data related specified form_name","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_metadata_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a specific metadata tibble from a supertibble — extract_metadata_tibble","title":"Extract a specific metadata tibble from a supertibble — extract_metadata_tibble","text":"Utility function extract specific metadata tibble supertibble given redcap_form_name","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_metadata_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a specific metadata tibble from a supertibble — extract_metadata_tibble","text":"","code":"extract_metadata_tibble(supertbl, redcap_form_name)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_metadata_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a specific metadata tibble from a supertibble — extract_metadata_tibble","text":"supertbl supertibble generated read_redcap(). redcap_form_name character string identifying redcap_form_name metadata tibble associated .","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_metadata_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a specific metadata tibble from a supertibble — extract_metadata_tibble","text":"tibble","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","title":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","text":"Take supertibble generated read_redcap() return one data tibbles.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","text":"","code":"extract_tibble(supertbl, tbl)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","text":"supertbl supertibble generated read_redcap(). Required. tbl redcap_form_name data tibble extract. Required.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","text":"tibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibble.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","text":"function makes easy extract single instrument's data REDCapTidieR supertibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a single data tibble from a REDCapTidieR supertibble — extract_tibble","text":"","code":"superheroes_supertbl #> # A REDCapTidieR Supertibble with 2 instruments #>   redcap_form_name   redcap_form_label  redcap_data redcap_metadata    structure #>   <chr>              <chr>              <list>      <list>             <chr>     #> 1 heroes_information Heroes Information <tibble>    <tibble [11 × 17]> nonrepea… #> 2 super_hero_powers  Super Hero Powers  <tibble>    <tibble [2 × 17]>  repeating #> # ℹ 4 more variables: data_rows <int>, data_cols <int>, data_size <lbstr_by>, #> #   data_na_pct <formttbl>  extract_tibble(superheroes_supertbl, \"heroes_information\") #> # A tibble: 734 × 12 #>    record_id name      gender eye_color race  hair_color height weight publisher #>        <dbl> <chr>     <chr>  <chr>     <chr> <chr>       <dbl>  <dbl> <chr>     #>  1         0 A-Bomb    Male   yellow    Human No Hair       203    441 Marvel C… #>  2         1 Abe Sapi… Male   blue      Icth… No Hair       191     65 Dark Hor… #>  3         2 Abin Sur  Male   blue      Unga… No Hair       185     90 DC Comics #>  4         3 Abominat… Male   green     Huma… No Hair       203    441 Marvel C… #>  5         4 Abraxas   Male   blue      Cosm… Black         -99    -99 Marvel C… #>  6         5 Absorbin… Male   blue      Human No Hair       193    122 Marvel C… #>  7         6 Adam Mon… Male   blue      -     Blond         -99    -99 NBC - He… #>  8         7 Adam Str… Male   blue      Human Blond         185     88 DC Comics #>  9         8 Agent 13  Female blue      -     Blond         173     61 Marvel C… #> 10         9 Agent Bob Male   brown     Human Brown         178     81 Marvel C… #> # ℹ 724 more rows #> # ℹ 3 more variables: skin_color <chr>, alignment <chr>, #> #   form_status_complete <fct>"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibbles.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","title":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","text":"Take supertibble generated read_redcap() return named list data tibbles.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibbles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","text":"","code":"extract_tibbles(supertbl, tbls = everything())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibbles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","text":"supertbl supertibble generated read_redcap(). Required. tbls vector form_names tidyselect helper. Default dplyr::everything().","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibbles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","text":"named list tibbles","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibbles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","text":"function makes easy extract multiple instrument's data REDCapTidieR supertibble named list. Specifying instruments using tidyselect helper functions dplyr::starts_with() dplyr::ends_with() supported.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/extract_tibbles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract data tibbles from a REDCapTidieR supertibble into a list — extract_tibbles","text":"","code":"superheroes_supertbl #> # A REDCapTidieR Supertibble with 2 instruments #>   redcap_form_name   redcap_form_label  redcap_data redcap_metadata    structure #>   <chr>              <chr>              <list>      <list>             <chr>     #> 1 heroes_information Heroes Information <tibble>    <tibble [11 × 17]> nonrepea… #> 2 super_hero_powers  Super Hero Powers  <tibble>    <tibble [2 × 17]>  repeating #> # ℹ 4 more variables: data_rows <int>, data_cols <int>, data_size <lbstr_by>, #> #   data_na_pct <formttbl>  # Extract all data tibbles extract_tibbles(superheroes_supertbl) #> $heroes_information #> # A tibble: 734 × 12 #>    record_id name      gender eye_color race  hair_color height weight publisher #>        <dbl> <chr>     <chr>  <chr>     <chr> <chr>       <dbl>  <dbl> <chr>     #>  1         0 A-Bomb    Male   yellow    Human No Hair       203    441 Marvel C… #>  2         1 Abe Sapi… Male   blue      Icth… No Hair       191     65 Dark Hor… #>  3         2 Abin Sur  Male   blue      Unga… No Hair       185     90 DC Comics #>  4         3 Abominat… Male   green     Huma… No Hair       203    441 Marvel C… #>  5         4 Abraxas   Male   blue      Cosm… Black         -99    -99 Marvel C… #>  6         5 Absorbin… Male   blue      Human No Hair       193    122 Marvel C… #>  7         6 Adam Mon… Male   blue      -     Blond         -99    -99 NBC - He… #>  8         7 Adam Str… Male   blue      Human Blond         185     88 DC Comics #>  9         8 Agent 13  Female blue      -     Blond         173     61 Marvel C… #> 10         9 Agent Bob Male   brown     Human Brown         178     81 Marvel C… #> # ℹ 724 more rows #> # ℹ 3 more variables: skin_color <chr>, alignment <chr>, #> #   form_status_complete <fct> #>  #> $super_hero_powers #> # A tibble: 5,966 × 4 #>    record_id redcap_repeat_instance power               form_status_complete #>        <dbl>                  <dbl> <chr>               <fct>                #>  1         0                      1 Accelerated Healing Incomplete           #>  2         0                      2 Durability          Incomplete           #>  3         0                      3 Longevity           Incomplete           #>  4         0                      4 Super Strength      Incomplete           #>  5         0                      5 Stamina             Incomplete           #>  6         0                      6 Camouflage          Incomplete           #>  7         0                      7 Self-Sustenance     Incomplete           #>  8         1                      1 Agility             Incomplete           #>  9         1                      2 Accelerated Healing Incomplete           #> 10         1                      3 Cold Resistance     Incomplete           #> # ℹ 5,956 more rows #>   # Only extract data tibbles starting with \"heroes\" extract_tibbles(superheroes_supertbl, starts_with(\"heroes\")) #> $heroes_information #> # A tibble: 734 × 12 #>    record_id name      gender eye_color race  hair_color height weight publisher #>        <dbl> <chr>     <chr>  <chr>     <chr> <chr>       <dbl>  <dbl> <chr>     #>  1         0 A-Bomb    Male   yellow    Human No Hair       203    441 Marvel C… #>  2         1 Abe Sapi… Male   blue      Icth… No Hair       191     65 Dark Hor… #>  3         2 Abin Sur  Male   blue      Unga… No Hair       185     90 DC Comics #>  4         3 Abominat… Male   green     Huma… No Hair       203    441 Marvel C… #>  5         4 Abraxas   Male   blue      Cosm… Black         -99    -99 Marvel C… #>  6         5 Absorbin… Male   blue      Human No Hair       193    122 Marvel C… #>  7         6 Adam Mon… Male   blue      -     Blond         -99    -99 NBC - He… #>  8         7 Adam Str… Male   blue      Human Blond         185     88 DC Comics #>  9         8 Agent 13  Female blue      -     Blond         173     61 Marvel C… #> 10         9 Agent Bob Male   brown     Human Brown         178     81 Marvel C… #> # ℹ 724 more rows #> # ℹ 3 more variables: skin_color <chr>, alignment <chr>, #> #   form_status_complete <fct> #>"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Format REDCap variable labels — format-helpers","title":"Format REDCap variable labels — format-helpers","text":"Use functions format_labels argument make_labelled() define variable labels formatted applied data columns redcap_data. functions helpful create pretty variable labels REDCap field labels. fmt_strip_whitespace() removes extra white space inside start end string. thin wrapper stringr::str_trim() stringr::str_squish(). fmt_strip_trailing_colon() removes colon character end string. fmt_strip_trailing_punct() removes punctuation end string. fmt_strip_html() removes html tags string. fmt_strip_field_embedding() removes text curly braces {} REDCap uses special \"field embedding\" logic. Note read_redcap() removes html tags field embedding logic field labels metadata default.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format REDCap variable labels — format-helpers","text":"","code":"fmt_strip_whitespace(x)  fmt_strip_trailing_colon(x)  fmt_strip_trailing_punct(x)  fmt_strip_html(x)  fmt_strip_field_embedding(x)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format REDCap variable labels — format-helpers","text":"x character vector","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format-helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format REDCap variable labels — format-helpers","text":"modified character vector","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format-helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format REDCap variable labels — format-helpers","text":"","code":"fmt_strip_whitespace(\"Poorly Spaced   Label \") #> [1] \"Poorly Spaced Label\"  fmt_strip_trailing_colon(\"Label:\") #> [1] \"Label\"  fmt_strip_trailing_punct(\"Label-\") #> [1] \"Label\"  fmt_strip_html(\"<b>Bold Label<\/b>\") #> [1] \"Bold Label\"  fmt_strip_field_embedding(\"Label{another_field}\") #> [1] \"Label\"  superheroes_supertbl #> # A REDCapTidieR Supertibble with 2 instruments #>   redcap_form_name   redcap_form_label  redcap_data redcap_metadata    structure #>   <chr>              <chr>              <list>      <list>             <chr>     #> 1 heroes_information Heroes Information <tibble>    <tibble [11 × 17]> nonrepea… #> 2 super_hero_powers  Super Hero Powers  <tibble>    <tibble [2 × 17]>  repeating #> # ℹ 4 more variables: data_rows <int>, data_cols <int>, data_size <lbstr_by>, #> #   data_na_pct <formttbl>  make_labelled(superheroes_supertbl, format_labels = fmt_strip_trailing_colon) #> # A REDCapTidieR Supertibble with 2 instruments #>   redcap_form_name   redcap_form_label  redcap_data redcap_metadata    structure #>   <chr>              <chr>              <list>      <list>             <chr>     #> 1 heroes_information Heroes Information <tibble>    <tibble [11 × 17]> nonrepea… #> 2 super_hero_powers  Super Hero Powers  <tibble>    <tibble [2 × 17]>  repeating #> # ℹ 4 more variables: data_rows <int>, data_cols <int>, data_size <lbstr_by>, #> #   data_na_pct <formttbl>"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format_error_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Format value for error message — format_error_val","title":"Format value for error message — format_error_val","text":"Format value error message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format_error_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format value for error message — format_error_val","text":"","code":"format_error_val(x)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format_error_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format value for error message — format_error_val","text":"x value format","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/format_error_val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format value for error message — format_error_val","text":"x atomic, x cli formatting truncate 5 values. Otherwise, string summarizing x produced as_label","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_fields_to_drop.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine fields included in REDCapR::redcap_read_oneshot output that should be dropped from results of read_redcap — get_fields_to_drop","title":"Determine fields included in REDCapR::redcap_read_oneshot output that should be dropped from results of read_redcap — get_fields_to_drop","text":"Determine fields included REDCapR::redcap_read_oneshot output dropped results read_redcap","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_fields_to_drop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine fields included in REDCapR::redcap_read_oneshot output that should be dropped from results of read_redcap — get_fields_to_drop","text":"","code":"get_fields_to_drop(db_metadata, form)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_fields_to_drop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine fields included in REDCapR::redcap_read_oneshot output that should be dropped from results of read_redcap — get_fields_to_drop","text":"db_metadata metadata tibble created REDCapR::redcap_metadata_read form name instrument containing identifiers","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_fields_to_drop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine fields included in REDCapR::redcap_read_oneshot output that should be dropped from results of read_redcap — get_fields_to_drop","text":"character vector extra field names can used filter results REDCapR::redcap_read_oneshot","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_fields_to_drop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine fields included in REDCapR::redcap_read_oneshot output that should be dropped from results of read_redcap — get_fields_to_drop","text":"function applies rules determine fields included results REDCapR::redcap_read_oneshot user request instrument containing identifiers","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_metadata_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata specification table — get_metadata_spec","title":"Get metadata specification table — get_metadata_spec","text":"Get metadata specification table","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_metadata_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata specification table — get_metadata_spec","text":"","code":"get_metadata_spec(   metadata_tbl,   selected_cols,   names_prefix,   names_sep,   names_glue )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_metadata_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata specification table — get_metadata_spec","text":"metadata_tbl metadata tibble supertibble generated read_redcap(). selected_cols Character string vector field names checkbox combination names_prefix String added start every variable name. names_sep String separate new column names names_prefix. names_glue Instead names_sep names_prefix, can supply glue specification unique .value create custom column names.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_metadata_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata specification table — get_metadata_spec","text":"tibble","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_mixed_structure_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Mixed Structure Instrument List — get_mixed_structure_fields","title":"Get Mixed Structure Instrument List — get_mixed_structure_fields","text":"Define fields given project used repeating nonrepeating manner.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_mixed_structure_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Mixed Structure Instrument List — get_mixed_structure_fields","text":"","code":"get_mixed_structure_fields(db_data)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_mixed_structure_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Mixed Structure Instrument List — get_mixed_structure_fields","text":"db_data REDCap database output generated REDCapR::redcap_read_oneshot()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_mixed_structure_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Mixed Structure Instrument List — get_mixed_structure_fields","text":"dataframe","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_record_id_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function to extract the name of the project identifier field for a tibble of REDCap data — get_record_id_field","title":"Utility function to extract the name of the project identifier field for a tibble of REDCap data — get_record_id_field","text":"Utility function extract name project identifier field tibble REDCap data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_record_id_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function to extract the name of the project identifier field for a tibble of REDCap data — get_record_id_field","text":"","code":"get_record_id_field(data)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_record_id_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function to extract the name of the project identifier field for a tibble of REDCap data — get_record_id_field","text":"data tibble REDCap data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_record_id_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function to extract the name of the project identifier field for a tibble of REDCap data — get_record_id_field","text":"name identifier field data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_record_id_field.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility function to extract the name of the project identifier field for a tibble of REDCap data — get_record_id_field","text":"current implementation assumes first field data project identifier","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_repeat_event_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Add identification for repeat event types — get_repeat_event_types","title":"Add identification for repeat event types — get_repeat_event_types","text":"correctly assign repeat event types assumptions must made: 3 behaviors: nonrepeating, repeat_separately, repeat_together event shows redcap_repeat_instance redcap_repeat_instrument NA, can considered nonrepeat event. event always NA redcap_repeat_instrument filled redcap_repeat_instance can assumed repeat_together event repeat_separate nonrepeating event types exhibit behavior along primary keys data. nonrepeating event types can data display redcap_repeat_instancevalues filled NA. case, can assumed event repeating separate event.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_repeat_event_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add identification for repeat event types — get_repeat_event_types","text":"","code":"get_repeat_event_types(data)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_repeat_event_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add identification for repeat event types — get_repeat_event_types","text":"data REDCap data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/get_repeat_event_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add identification for repeat event types — get_repeat_event_types","text":"dataframe unique event names mapped corresponding repeat types","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/invert_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap vector names for values — invert_vec","title":"Swap vector names for values — invert_vec","text":"Swap vector names values","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/invert_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap vector names for values — invert_vec","text":"","code":"invert_vec(x)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/invert_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap vector names for values — invert_vec","text":"x vector","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/invert_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap vector names for values — invert_vec","text":"Vector names values reversed","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/is_labelled.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if an object is labelled — is_labelled","title":"Determine if an object is labelled — is_labelled","text":"internal utility function used inform processes whether given object labelled (.e. make_labelled()).","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/is_labelled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if an object is labelled — is_labelled","text":"","code":"is_labelled(obj)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/is_labelled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if an object is labelled — is_labelled","text":"obj object tested \"label\" attributes","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/is_labelled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if an object is labelled — is_labelled","text":"boolean","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/is_labelled.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine if an object is labelled — is_labelled","text":"object considered labelled \"label\" attributes.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/link_arms.html","id":null,"dir":"Reference","previous_headings":"","what":"Link longitudinal REDCap instruments with their events/arms — link_arms","title":"Link longitudinal REDCap instruments with their events/arms — link_arms","text":"REDCap databases containing arms events, necessary determine linked variables belong .","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/link_arms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link longitudinal REDCap instruments with their events/arms — link_arms","text":"","code":"link_arms(redcap_uri, token, suppress_redcapr_messages = TRUE)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/link_arms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link longitudinal REDCap instruments with their events/arms — link_arms","text":"redcap_uri REDCap URI token REDCap API token suppress_redcapr_messages logical control whether suppress messages REDCapR API calls. Default TRUE.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/link_arms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link longitudinal REDCap instruments with their events/arms — link_arms","text":"Returns tibble redcap_event_names list elements containing vector associated instruments.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_labelled.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","title":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","text":"Take supertibble use labelled package apply variable labels columns supertibble well tibble redcap_data, redcap_metadata, redcap_events columns supertibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_labelled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","text":"","code":"make_labelled(supertbl, format_labels = NULL)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_labelled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","text":"supertbl supertibble generated using read_redcap() format_labels one multiple optional label formatting functions. label formatting function function takes character vector returns modified character vector length. function applied field labels attaching variables. One : NULL apply additional formatting. Default. label formatting function. character name label formatting function. vector list label formatting functions function names applied order. Note ordering may affect results.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_labelled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","text":"labelled supertibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_labelled.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","text":"variable labels data tibbles derived field_label column metadata tibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_labelled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply variable labels to a REDCapTidieR supertibble — make_labelled","text":"","code":"superheroes_supertbl #> # A REDCapTidieR Supertibble with 2 instruments #>   redcap_form_name   redcap_form_label  redcap_data redcap_metadata    structure #>   <chr>              <chr>              <list>      <list>             <chr>     #> 1 heroes_information Heroes Information <tibble>    <tibble [11 × 17]> nonrepea… #> 2 super_hero_powers  Super Hero Powers  <tibble>    <tibble [2 × 17]>  repeating #> # ℹ 4 more variables: data_rows <int>, data_cols <int>, data_size <lbstr_by>, #> #   data_na_pct <formttbl>  make_labelled(superheroes_supertbl) #> # A REDCapTidieR Supertibble with 2 instruments #>   redcap_form_name   redcap_form_label  redcap_data redcap_metadata    structure #>   <chr>              <chr>              <list>      <list>             <chr>     #> 1 heroes_information Heroes Information <tibble>    <tibble [11 × 17]> nonrepea… #> 2 super_hero_powers  Super Hero Powers  <tibble>    <tibble [2 × 17]>  repeating #> # ℹ 4 more variables: data_rows <int>, data_cols <int>, data_size <lbstr_by>, #> #   data_na_pct <formttbl>  make_labelled(superheroes_supertbl, format_labels = tolower) #> # A REDCapTidieR Supertibble with 2 instruments #>   redcap_form_name   redcap_form_label  redcap_data redcap_metadata    structure #>   <chr>              <chr>              <list>      <list>             <chr>     #> 1 heroes_information Heroes Information <tibble>    <tibble [11 × 17]> nonrepea… #> 2 super_hero_powers  Super Hero Powers  <tibble>    <tibble [2 × 17]>  repeating #> # ℹ 4 more variables: data_rows <int>, data_cols <int>, data_size <lbstr_by>, #> #   data_na_pct <formttbl>  if (FALSE) { # \\dontrun{ redcap_uri <- Sys.getenv(\"REDCAP_URI\") token <- Sys.getenv(\"REDCAP_TOKEN\")  supertbl <- read_redcap(redcap_uri, token) make_labelled(supertbl) } # }"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_skimr_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Make skimr labels from default skimr outputs — make_skimr_labels","title":"Make skimr labels from default skimr outputs — make_skimr_labels","text":"simple helper function returns default skimr names formatted character vector use make_lablled","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_skimr_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make skimr labels from default skimr outputs — make_skimr_labels","text":"","code":"make_skimr_labels()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_skimr_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make skimr labels from default skimr outputs — make_skimr_labels","text":"character vector","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/make_skimr_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make skimr labels from default skimr outputs — make_skimr_labels","text":"labels supplied manually created agreed upon human-readable","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/multi_choice_to_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Update multiple choice fields with label data — multi_choice_to_labels","title":"Update multiple choice fields with label data — multi_choice_to_labels","text":"Update REDCap variables multi-choice types standard form labels taken REDCap metadata.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/multi_choice_to_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update multiple choice fields with label data — multi_choice_to_labels","text":"","code":"multi_choice_to_labels(   db_data,   db_metadata,   raw_or_label = \"label\",   call = caller_env() )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/multi_choice_to_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update multiple choice fields with label data — multi_choice_to_labels","text":"db_data REDCap database object db_metadata REDCap metadata object raw_or_label string (either 'raw', 'label', 'haven') specifies whether export raw coded values labels options categorical fields. Default 'label'. 'haven' supplied, categorical fields converted haven_labelled vectors. call call conditions","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/multi_choice_to_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update multiple choice fields with label data — multi_choice_to_labels","text":"Coerce variables field_type \"truefalse\", \"yesno\", \"checkbox\" logical. Introduce form_status_complete column append end tibble outputs. Ensure field_types \"dropdown\" \"radio\" converted appropriately since label appendings important unique .","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse labels from REDCap metadata into usable formats — parse_labels","title":"Parse labels from REDCap metadata into usable formats — parse_labels","text":"Takes string separated ,s /|s (.e. comma/tab separated values) containing key value pairs (raw label) returns tidy tibble.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse labels from REDCap metadata into usable formats — parse_labels","text":"","code":"parse_labels(string, return_vector = FALSE, return_stripped_text_flag = FALSE)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse labels from REDCap metadata into usable formats — parse_labels","text":"string db_metadata$select_choices_or_calculations field pre-filtered checkbox field_type return_vector logical whether return result vector return_stripped_text_flag logical whether return flag indicating whether text stripped labels","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse labels from REDCap metadata into usable formats — parse_labels","text":"tidy tibble matrix giving raw label outputs used later functions return_vector = FALSE, default. Otherwise vector result c(raw = label) format use dplyr::recode","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse labels from REDCap metadata into usable formats — parse_labels","text":"associated string comes metadata outputs.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_logical_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert yesno, truefalse, and checkbox fields to logical — parse_logical_cols","title":"Convert yesno, truefalse, and checkbox fields to logical — parse_logical_cols","text":"Convert yesno, truefalse, checkbox fields logical","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_logical_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert yesno, truefalse, and checkbox fields to logical — parse_logical_cols","text":"","code":"parse_logical_cols(db_data, db_metadata, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/parse_logical_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert yesno, truefalse, and checkbox fields to logical — parse_logical_cols","text":"db_data REDCap database object db_metadata REDCap metadata object call call conditions","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/read_redcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a REDCap database into a tidy supertibble — read_redcap","title":"Import a REDCap database into a tidy supertibble — read_redcap","text":"Query REDCap API retrieve data metadata project, transform output \"supertibble\" contains data metadata organized tibbles, broken instrument.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/read_redcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a REDCap database into a tidy supertibble — read_redcap","text":"","code":"read_redcap(   redcap_uri,   token,   raw_or_label = \"label\",   forms = NULL,   export_survey_fields = NULL,   export_data_access_groups = NULL,   suppress_redcapr_messages = TRUE,   guess_max = Inf,   allow_mixed_structure = getOption(\"redcaptidier.allow.mixed.structure\", FALSE) )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/read_redcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a REDCap database into a tidy supertibble — read_redcap","text":"redcap_uri URI/URL REDCap server (e.g., \"https://server.org/apps/redcap/api/\"). Required. token user-specific string serves password project. Required. raw_or_label string (either 'raw', 'label', 'haven') specifies whether export raw coded values labels options categorical fields. Default 'label'. 'haven' supplied, categorical fields converted haven_labelled vectors. forms character vector REDCap instrument names specifies instruments import. Default NULL imports instruments project. export_survey_fields logical specifies whether export survey identifier timestamp fields. default, NULL, tries determine survey fields exist returns available. export_data_access_groups logical specifies whether export data access group field. default, NULL, tries determine data access group field exists returns available. suppress_redcapr_messages logical control whether suppress messages REDCapR API calls. Default TRUE. guess_max positive base::numeric value passed readr::read_csv() specifies maximum number records use guessing column types. Default Inf. allow_mixed_structure logical allow support mixed repeating/non-repeating instruments. Setting TRUE treat mixed instrument's non-repeating versions repeating instruments single instance. Applies longitudinal projects . Default FALSE. Can set globally options(redcaptidier.allow.mixed.structure = TRUE).","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/read_redcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a REDCap database into a tidy supertibble — read_redcap","text":"tibble row represents REDCap instrument. contains following columns: redcap_form_name, name instrument redcap_form_label, label instrument redcap_data, tibble data instrument redcap_metadata, tibble data dictionary entries field instrument redcap_events, tibble information arms longitudinal events represented instrument. project longitudinal events enabled structure, instrument structure, either \"repeating\" \"nonrepeating\" data_rows, number rows instrument's data tibble data_cols, number columns instrument's data tibble data_size, size memory instrument's data tibble computed lobstr::obj_size() data_na_pct, percentage cells instrument's data columns NA excluding identifier form completion columns","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/read_redcap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import a REDCap database into a tidy supertibble — read_redcap","text":"function uses REDCapR package query REDCap API. REDCap API returns block matrix mashes data data collection instruments together. read_redcap() function deconstructs block matrix splices data individual tibbles, one tibble represents data one instrument.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/read_redcap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import a REDCap database into a tidy supertibble — read_redcap","text":"","code":"if (FALSE) { # \\dontrun{ redcap_uri <- Sys.getenv(\"REDCAP_URI\") token <- Sys.getenv(\"REDCAP_TOKEN\")  read_redcap(   redcap_uri,   token,   raw_or_label = \"label\" ) } # }"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/release_questions.html","id":null,"dir":"Reference","previous_headings":"","what":"Additional release questions — release_questions","title":"Additional release questions — release_questions","text":"Additional release questions added using devtools::release() CRAN submissions.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/release_questions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Additional release questions — release_questions","text":"","code":"release_questions()"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/release_questions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Additional release questions — release_questions","text":"series character string questions","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/release_questions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Additional release questions — release_questions","text":"follows documentation provided devtools::release().","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/remove_empty_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove rows with empty data — remove_empty_rows","title":"Remove rows with empty data — remove_empty_rows","text":"Remove rows empty associated data columns (derived fields REDCap). occurs form filled event, forms . Regardless form's status, forms event included output long form event contains data. applies longitudinal REDCap databases containing events.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/remove_empty_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove rows with empty data — remove_empty_rows","text":"","code":"remove_empty_rows(data, my_record_id)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/remove_empty_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove rows with empty data — remove_empty_rows","text":"data REDCap dataframe longitudinal database, pre-processed within distill_* function. my_record_id record ID defined project.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/remove_empty_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove rows with empty data — remove_empty_rows","text":"dataframe.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/replace_true.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace checkbox TRUEs with raw_or_label values — replace_true","title":"Replace checkbox TRUEs with raw_or_label values — replace_true","text":"Simple utility function replacing checkbox field values.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/replace_true.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace checkbox TRUEs with raw_or_label values — replace_true","text":"","code":"replace_true(col, col_name, metadata, raw_or_label)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/replace_true.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace checkbox TRUEs with raw_or_label values — replace_true","text":"col vector col_name string metadata metadata tibble original supertibble raw_or_label Either 'raw' 'label' specify whether use raw coded values labels options. Default 'label'.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/replace_true.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace checkbox TRUEs with raw_or_label values — replace_true","text":"character string","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/resolve_formatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert user input into label formatting function — resolve_formatter","title":"Convert user input into label formatting function — resolve_formatter","text":"Convert user input label formatting function","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/resolve_formatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert user input into label formatting function — resolve_formatter","text":"","code":"resolve_formatter(format_labels, env = caller_env(n = 2), call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/resolve_formatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert user input into label formatting function — resolve_formatter","text":"format_labels argument passed make_labelled env environment look functions format_labels contains character elements. default, caller_env(n = 2), uses environment user called make_labelled() call calling environment use error message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/resolve_formatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert user input into label formatting function — resolve_formatter","text":"function","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/safe_set_variable_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely set variable labels — safe_set_variable_labels","title":"Safely set variable labels — safe_set_variable_labels","text":"utility function setting labels tibble named vector accounting labels may present data.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/safe_set_variable_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely set variable labels — safe_set_variable_labels","text":"","code":"safe_set_variable_labels(data, labs)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/safe_set_variable_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safely set variable labels — safe_set_variable_labels","text":"tibble","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/skim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply applicable skimmers to data — skim_data","title":"Apply applicable skimmers to data — skim_data","text":"helper function add_skimr_metadata() applies applicable skimmers given dataframe.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/skim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply applicable skimmers to data — skim_data","text":"","code":"skim_data(redcap_data, redcap_metadata, is_labelled)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/skim_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply applicable skimmers to data — skim_data","text":"dataframe","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/strip_html_field_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove html tags and field embedding logic from a string — strip_html_field_embedding","title":"Remove html tags and field embedding logic from a string — strip_html_field_embedding","text":"Remove html tags field embedding logic string","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/strip_html_field_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove html tags and field embedding logic from a string — strip_html_field_embedding","text":"","code":"strip_html_field_embedding(x)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/strip_html_field_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove html tags and field embedding logic from a string — strip_html_field_embedding","text":"x vector strings format","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/strip_html_field_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove html tags and field embedding logic from a string — strip_html_field_embedding","text":"vector strings html tags, field embedding logic, extra whitespace removed","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/superheroes_supertbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Superheroes Data — superheroes_supertbl","title":"Superheroes Data — superheroes_supertbl","text":"dataset superheroes REDCapTidieR supertbl object","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/superheroes_supertbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Superheroes Data — superheroes_supertbl","text":"","code":"superheroes_supertbl"},{"path":[]},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/superheroes_supertbl.html","id":"heroes-information","dir":"Reference","previous_headings":"","what":"heroes_information","title":"Superheroes Data — superheroes_supertbl","text":"tibble 734 rows 12 columns: record_id REDCap record ID name Hero name gender Gender eye_color Eye color race Race hair_color Hair color height Height weight Weight publisher Publisher skin_color Skin color alignment Alignment form_status_complete REDCap instrument completed?","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/superheroes_supertbl.html","id":"super-hero-powers","dir":"Reference","previous_headings":"","what":"super_hero_powers","title":"Superheroes Data — superheroes_supertbl","text":"tibble 5,966 rows 4 columns: record_id REDCap record ID redcap_form_instance REDCap repeat instance power Super power form_status_complete REDCap instrument completed?","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/superheroes_supertbl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Superheroes Data — superheroes_supertbl","text":"https://www.superherodb.com/","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/supertbl_recode.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode fields using supertbl metadata — supertbl_recode","title":"Recode fields using supertbl metadata — supertbl_recode","text":"utility function helps map metadata field types order apply changes supertbl tables.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/supertbl_recode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode fields using supertbl metadata — supertbl_recode","text":"","code":"supertbl_recode(supertbl, supertbl_meta, add_labelled_column_headers)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/supertbl_recode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode fields using supertbl metadata — supertbl_recode","text":"supertbl supertibble generated using read_redcap() supertbl_meta unnest-ed metadata tibble supertibble add_labelled_column_headers Whether include labelled outputs","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/tbl_sum.redcap_supertbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a succinct summary of an object — tbl_sum.redcap_supertbl","title":"Provide a succinct summary of an object — tbl_sum.redcap_supertbl","text":"tbl_sum() gives brief textual description table-like object, include dimensions data source first element, additional information elements (grouping dplyr). default implementation forwards obj_sum().","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/tbl_sum.redcap_supertbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a succinct summary of an object — tbl_sum.redcap_supertbl","text":"","code":"# S3 method for class 'redcap_supertbl' tbl_sum(x)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/tbl_sum.redcap_supertbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a succinct summary of an object — tbl_sum.redcap_supertbl","text":"x Object summarise.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/tbl_sum.redcap_supertbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a succinct summary of an object — tbl_sum.redcap_supertbl","text":"named character vector, describing dimensions first element data source name first element.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/try_redcapr.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a REDCapR API call with custom error handling — try_redcapr","title":"Make a REDCapR API call with custom error handling — try_redcapr","text":"Make REDCapR API call custom error handling","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/try_redcapr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a REDCapR API call with custom error handling — try_redcapr","text":"","code":"try_redcapr(expr, call = caller_env())"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/try_redcapr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a REDCapR API call with custom error handling — try_redcapr","text":"expr expression making REDCapR API call call calling environment use warning message","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/try_redcapr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a REDCapR API call with custom error handling — try_redcapr","text":"successful, data element REDCapR result. Otherwise error","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_dag_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Implement REDCapR DAG Data into Supertibble — update_dag_cols","title":"Implement REDCapR DAG Data into Supertibble — update_dag_cols","text":"helper function uses output REDCapR::redcap_dag_read applies necessary raw/label values redcap_data_access_group column. done REDCapTidieR retrieves raw data default, merges labels metadata. However, columns like redcap_data_access_group metadata nothing default reference.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_dag_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implement REDCapR DAG Data into Supertibble — update_dag_cols","text":"","code":"update_dag_cols(data, dag_data, raw_or_label)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_dag_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implement REDCapR DAG Data into Supertibble — update_dag_cols","text":"data REDCap data dag_data DAG dataset exported REDCapR::redcap_dag_read raw_or_label string (either 'raw', 'label', 'haven') specifies whether export raw coded values labels options categorical fields. Default 'label'. 'haven' supplied, categorical fields converted haven_labelled vectors.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_data_col_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Correctly label variables belonging to checkboxes with minus signs — update_data_col_names","title":"Correctly label variables belonging to checkboxes with minus signs — update_data_col_names","text":"Using db_data db_metadata, temporarily create conversion column reverts automatic REDCap behavior database column names \"-\"s converted \"_\"s.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_data_col_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correctly label variables belonging to checkboxes with minus signs — update_data_col_names","text":"","code":"update_data_col_names(db_data, db_metadata)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_data_col_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correctly label variables belonging to checkboxes with minus signs — update_data_col_names","text":"db_data REDCap database output defined REDCapR::redcap_read_oneshot()$data db_metadata REDCap metadata output defined REDCapR::redcap_metadata_read()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_data_col_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correctly label variables belonging to checkboxes with minus signs — update_data_col_names","text":"Updated db_data column names checkboxes \"-\"s replaced \"_\"s.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_data_col_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correctly label variables belonging to checkboxes with minus signs — update_data_col_names","text":"issue checkbox fields since analysts able verify checkbox variable suffices label counterparts.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_field_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Update metadata field names for checkbox handling — update_field_names","title":"Update metadata field names for checkbox handling — update_field_names","text":"Takes db_metadata object : replaces checkbox field rows set rows, one checkbox option appends field_name_updated field end checkbox variable handling updates field_label new checkbox rows include specific option \"field_label: option label\" format strips html field embedding logic field_label","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_field_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update metadata field names for checkbox handling — update_field_names","text":"","code":"update_field_names(db_metadata)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_field_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update metadata field names for checkbox handling — update_field_names","text":"db_metadata REDCap metadata output defined REDCapR::redcap_metadata_read()$data","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_field_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update metadata field names for checkbox handling — update_field_names","text":"Column db_metadata field_name_updated appended field_label updated new rows corresponding checkbox options","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/update_field_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update metadata field names for checkbox handling — update_field_names","text":"Assumes db_metadata: non-zero number rows contains field_name field_label columns","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/vec_ptype_abbr.redcap_supertbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector type as a string — vec_ptype_abbr.redcap_supertbl","title":"Vector type as a string — vec_ptype_abbr.redcap_supertbl","text":"vec_ptype_full() displays full type vector. vec_ptype_abbr() provides abbreviated summary suitable use column heading.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/vec_ptype_abbr.redcap_supertbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector type as a string — vec_ptype_abbr.redcap_supertbl","text":"","code":"# S3 method for class 'redcap_supertbl' vec_ptype_abbr(x, ..., prefix_named, suffix_shape)"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/vec_ptype_abbr.redcap_supertbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector type as a string — vec_ptype_abbr.redcap_supertbl","text":"x vector. ... dots future extensions must empty. prefix_named TRUE, add prefix named vectors. suffix_shape TRUE (default), append shape vector.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/vec_ptype_abbr.redcap_supertbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector type as a string — vec_ptype_abbr.redcap_supertbl","text":"string.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/write_redcap_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Supertibbles to XLSX — write_redcap_xlsx","title":"Write Supertibbles to XLSX — write_redcap_xlsx","text":"Transform supertibble XLSX file, REDCap data tibble separate sheet.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/write_redcap_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Supertibbles to XLSX — write_redcap_xlsx","text":"","code":"write_redcap_xlsx(   supertbl,   file,   add_labelled_column_headers = NULL,   use_labels_for_sheet_names = TRUE,   include_toc_sheet = TRUE,   include_metadata_sheet = TRUE,   table_style = \"tableStyleLight8\",   column_width = \"auto\",   recode_logical = TRUE,   na_replace = \"\",   overwrite = FALSE )"},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/write_redcap_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Supertibbles to XLSX — write_redcap_xlsx","text":"supertbl supertibble generated using read_redcap(). file name file output written. add_labelled_column_headers TRUE, first row sheet contain variable labels, variable names second row. FALSE, variable names first row. default value, NULL, tries determine supertbl contains variable labels , present, includes first row. labelled package must installed add_labelled_column_headers TRUE. use_labels_for_sheet_names FALSE, sheet names come REDCap instrument names. TRUE, sheet names come instrument labels. default TRUE. include_toc_sheet TRUE, first sheet XLSX output table contents, providing information data tibble workbook. default TRUE. include_metadata_sheet TRUE, final sheet XLSX output contain metadata variable, combining content supertbl$redcap_metadata. default TRUE. table_style Excel table style name \"none\". details, see \"formatting\" vignette openxlsx package. default \"tableStyleLight8\". column_width Sets width columns throughout workbook. default \"auto\", can specify numeric value. recode_logical TRUE, fields \"yesno\" field type recoded \"yes\"/\"\" fields \"checkbox\" field type recoded \"Checked\"/\"Unchecked\". default TRUE. na_replace value used replace NA values supertbl. default \"\". overwrite FALSE, overwrite file exists. default FALSE.","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/write_redcap_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Supertibbles to XLSX — write_redcap_xlsx","text":"openxlsx2 workbook object, invisibly","code":""},{"path":"https://chop-cgtinformatics.github.io/REDCapTidieR/reference/write_redcap_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Supertibbles to XLSX — write_redcap_xlsx","text":"","code":"if (FALSE) { # \\dontrun{ redcap_uri <- Sys.getenv(\"REDCAP_URI\") token <- Sys.getenv(\"REDCAP_TOKEN\")  supertbl <- read_redcap(redcap_uri, token)  supertbl %>%   write_redcap_xlsx(file = \"supertibble.xlsx\")  # Add variable labels  library(labelled)  supertbl %>%   make_labelled() %>%   write_redcap_xlsx(file = \"supertibble.xlsx\", add_labelled_column_headers = TRUE) } # }"}]
